'use client'

import React, { useState, useEffect } from 'react'
import { Button } from '../../components/ui/Button'

export default function DebugPage() {
  const [localStorageData, setLocalStorageData] = useState<any>({})
  const [currentUser, setCurrentUser] = useState<any>(null)

  const refreshData = () => {
    const data: any = {}
    for (let i = 0; i < localStorage.length; i++) {
      const key = localStorage.key(i)
      if (key) {
        try {
          data[key] = JSON.parse(localStorage.getItem(key) || '')
        } catch {
          data[key] = localStorage.getItem(key)
        }
      }
    }
    setLocalStorageData(data)
    
    const userData = localStorage.getItem('current_user')
    if (userData) {
      try {
        setCurrentUser(JSON.parse(userData))
      } catch {
        setCurrentUser(null)
      }
    } else {
      setCurrentUser(null)
    }
  }

  const clearAllData = () => {
    localStorage.clear()
    refreshData()
  }

  const createTestData = () => {
    // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
    const testUsers = [
      {
        id: '1',
        name: '–¢–µ—Å—Ç–æ–≤—ã–π –∫–ª–∏–µ–Ω—Ç',
        email: 'client@example.com',
        phone: '+375 (29) 123-45-67',
        role: 'client',
        status: 'active',
        registrationDate: '01.01.2024',
        lastLogin: '01.01.2024',
        location: '–ú–∏–Ω—Å–∫',
        isVerified: true
      },
      {
        id: '2',
        name: '–¢–µ—Å—Ç–æ–≤—ã–π –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å',
        email: 'executor@example.com',
        phone: '+375 (29) 987-65-43',
        role: 'executor',
        status: 'active',
        registrationDate: '01.01.2024',
        lastLogin: '01.01.2024',
        location: '–ú–∏–Ω—Å–∫',
        isVerified: true,
        legalStatus: '–ò–ü'
      }
    ]
    
    localStorage.setItem('platform_users', JSON.stringify(testUsers))
    refreshData()
  }

  useEffect(() => {
    refreshData()
  }, [])

  return (
    <div className="min-h-screen bg-gray-50 p-8">
      <div className="max-w-6xl mx-auto">
        <h1 className="text-3xl font-bold text-gray-900 mb-8">üîç –°—Ç—Ä–∞–Ω–∏—Ü–∞ –æ—Ç–ª–∞–¥–∫–∏</h1>
        
        <div className="grid grid-cols-1 lg:grid-cols-2 gap-8">
          {/* –¢–µ–∫—É—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å */}
          <div className="bg-white rounded-lg shadow p-6">
            <h2 className="text-xl font-semibold text-gray-900 mb-4">üë§ –¢–µ–∫—É—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å</h2>
            {currentUser ? (
              <div className="space-y-2">
                <p><strong>ID:</strong> {currentUser.id}</p>
                <p><strong>–ò–º—è:</strong> {currentUser.name}</p>
                <p><strong>Email:</strong> {currentUser.email}</p>
                <p><strong>–†–æ–ª—å:</strong> {currentUser.role}</p>
                <p><strong>–°—Ç–∞—Ç—É—Å:</strong> {currentUser.status}</p>
                <p><strong>–ú–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ:</strong> {currentUser.location}</p>
              </div>
            ) : (
              <p className="text-gray-500">–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω</p>
            )}
          </div>

          {/* –î–µ–π—Å—Ç–≤–∏—è */}
          <div className="bg-white rounded-lg shadow p-6">
            <h2 className="text-xl font-semibold text-gray-900 mb-4">‚ö° –î–µ–π—Å—Ç–≤–∏—è</h2>
            <div className="space-y-3">
              <Button onClick={refreshData} className="w-full">
                –û–±–Ω–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ
              </Button>
              <Button onClick={createTestData} variant="outline" className="w-full">
                –°–æ–∑–¥–∞—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
              </Button>
              <Button onClick={clearAllData} variant="outline" className="w-full">
                –û—á–∏—Å—Ç–∏—Ç—å –≤—Å–µ –¥–∞–Ω–Ω—ã–µ
              </Button>
            </div>
          </div>
        </div>

        {/* –í—Å–µ –¥–∞–Ω–Ω—ã–µ localStorage */}
        <div className="mt-8 bg-white rounded-lg shadow p-6">
          <h2 className="text-xl font-semibold text-gray-900 mb-4">üíæ –í—Å–µ –¥–∞–Ω–Ω—ã–µ localStorage</h2>
          <div className="space-y-4">
            {Object.entries(localStorageData).map(([key, value]) => (
              <div key={key} className="border border-gray-200 rounded-lg p-4">
                <h3 className="font-medium text-gray-900 mb-2">{key}</h3>
                <pre className="bg-gray-100 p-3 rounded text-sm overflow-x-auto">
                  {JSON.stringify(value, null, 2)}
                </pre>
              </div>
            ))}
          </div>
        </div>

        {/* –°—Å—ã–ª–∫–∏ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è */}
        <div className="mt-8 bg-white rounded-lg shadow p-6">
          <h2 className="text-xl font-semibold text-gray-900 mb-4">üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ</h2>
          <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
            <a href="/auth/login" className="block">
              <Button variant="outline" className="w-full">
                –°—Ç—Ä–∞–Ω–∏—Ü–∞ –≤—Ö–æ–¥–∞
              </Button>
            </a>
            <a href="/dashboard/client" className="block">
              <Button variant="outline" className="w-full">
                –ö–∞–±–∏–Ω–µ—Ç –∫–ª–∏–µ–Ω—Ç–∞
              </Button>
            </a>
            <a href="/dashboard/executor" className="block">
              <Button variant="outline" className="w-full">
                –ö–∞–±–∏–Ω–µ—Ç –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è
              </Button>
            </a>
          </div>
        </div>
      </div>
    </div>
  )
} 