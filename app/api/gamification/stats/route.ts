import { NextRequest, NextResponse } from 'next/server'
import { gamificationService } from '../../../../lib/gamification/gamificationService'
import { ReferralService } from '../../../../lib/gamification/referralService'

export async function GET(request: NextRequest) {
  try {
    const { searchParams } = new URL(request.url)
    const userId = searchParams.get('userId')

    console.log('üéÆ API Gamification Stats - –ó–∞–ø—Ä–æ—Å –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', userId)

    if (!userId) {
      console.log('üéÆ API Gamification Stats - –û—à–∏–±–∫–∞: User ID –Ω–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω')
      return NextResponse.json({ error: 'User ID is required' }, { status: 400 })
    }

    console.log('üéÆ API Gamification Stats - –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', userId)
    const stats = await gamificationService.getUserStats(parseInt(userId))
    
    console.log('üéÆ API Gamification Stats - –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–ª—É—á–µ–Ω–∞:', stats)
    
    return NextResponse.json({ success: true, data: stats })
  } catch (error) {
    console.error('üéÆ API Gamification Stats - –û—à–∏–±–∫–∞:', error)
    return NextResponse.json(
      { error: 'Failed to fetch gamification stats' },
      { status: 500 }
    )
  }
}
