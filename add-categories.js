const { PrismaClient } = require('@prisma/client')

const prisma = new PrismaClient()

async function addCategories() {
  try {
    console.log('–î–æ–±–∞–≤–ª—è–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏...')
    
    // –°–æ–∑–¥–∞–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    const categories = await Promise.all([
      prisma.category.create({
        data: {
          name: '–≠–ª–µ–∫—Ç—Ä–∏–∫',
          description: '–£—Å–ª—É–≥–∏ —ç–ª–µ–∫—Ç—Ä–∏–∫–∞: —É—Å—Ç–∞–Ω–æ–≤–∫–∞, —Ä–µ–º–æ–Ω—Ç, –∑–∞–º–µ–Ω–∞',
          icon: '‚ö°',
          isActive: true,
          executorCount: 0,
          orderCount: 0
        }
      }),
      prisma.category.create({
        data: {
          name: '–°–∞–Ω—Ç–µ—Ö–Ω–∏–∫',
          description: '–£—Å–ª—É–≥–∏ —Å–∞–Ω—Ç–µ—Ö–Ω–∏–∫–∞: —É—Å—Ç–∞–Ω–æ–≤–∫–∞, —Ä–µ–º–æ–Ω—Ç, –∑–∞–º–µ–Ω–∞',
          icon: 'üö∞',
          isActive: true,
          executorCount: 0,
          orderCount: 0
        }
      }),
      prisma.category.create({
        data: {
          name: '–ü–∞—Ä–∏–∫–º–∞—Ö–µ—Ä',
          description: '–£—Å–ª—É–≥–∏ –ø–∞—Ä–∏–∫–º–∞—Ö–µ—Ä–∞: —Å—Ç—Ä–∏–∂–∫–∞, –æ–∫—Ä–∞—à–∏–≤–∞–Ω–∏–µ, —É–∫–ª–∞–¥–∫–∞',
          icon: '‚úÇÔ∏è',
          isActive: true,
          executorCount: 0,
          orderCount: 0
        }
      }),
      prisma.category.create({
        data: {
          name: '–ú–∞—Å—Ç–µ—Ä –ø–æ —Ä–µ–º–æ–Ω—Ç—É',
          description: '–†–µ–º–æ–Ω—Ç –±—ã—Ç–æ–≤–æ–π —Ç–µ—Ö–Ω–∏–∫–∏, –º–µ–±–µ–ª–∏, —ç–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∏',
          icon: 'üõ†Ô∏è',
          isActive: true,
          executorCount: 0,
          orderCount: 0
        }
      })
    ])

    console.log('–ö–∞—Ç–µ–≥–æ—Ä–∏–∏ —Å–æ–∑–¥–∞–Ω—ã:', categories.map(c => c.name))
    
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞:', error)
  } finally {
    await prisma.$disconnect()
  }
}

addCategories()

