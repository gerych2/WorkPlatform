"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/gamification/referral/route";
exports.ids = ["app/api/gamification/referral/route"];
exports.modules = {

/***/ "@prisma/client":
/*!*********************************!*\
  !*** external "@prisma/client" ***!
  \*********************************/
/***/ ((module) => {

module.exports = require("@prisma/client");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "child_process":
/*!********************************!*\
  !*** external "child_process" ***!
  \********************************/
/***/ ((module) => {

module.exports = require("child_process");

/***/ }),

/***/ "crypto":
/*!*************************!*\
  !*** external "crypto" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("crypto");

/***/ }),

/***/ "dns":
/*!**********************!*\
  !*** external "dns" ***!
  \**********************/
/***/ ((module) => {

module.exports = require("dns");

/***/ }),

/***/ "events":
/*!*************************!*\
  !*** external "events" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("events");

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/***/ ((module) => {

module.exports = require("fs");

/***/ }),

/***/ "http":
/*!***********************!*\
  !*** external "http" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("http");

/***/ }),

/***/ "https":
/*!************************!*\
  !*** external "https" ***!
  \************************/
/***/ ((module) => {

module.exports = require("https");

/***/ }),

/***/ "net":
/*!**********************!*\
  !*** external "net" ***!
  \**********************/
/***/ ((module) => {

module.exports = require("net");

/***/ }),

/***/ "os":
/*!*********************!*\
  !*** external "os" ***!
  \*********************/
/***/ ((module) => {

module.exports = require("os");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("path");

/***/ }),

/***/ "stream":
/*!*************************!*\
  !*** external "stream" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("stream");

/***/ }),

/***/ "tls":
/*!**********************!*\
  !*** external "tls" ***!
  \**********************/
/***/ ((module) => {

module.exports = require("tls");

/***/ }),

/***/ "url":
/*!**********************!*\
  !*** external "url" ***!
  \**********************/
/***/ ((module) => {

module.exports = require("url");

/***/ }),

/***/ "util":
/*!***********************!*\
  !*** external "util" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("util");

/***/ }),

/***/ "zlib":
/*!***********************!*\
  !*** external "zlib" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("zlib");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fgamification%2Freferral%2Froute&page=%2Fapi%2Fgamification%2Freferral%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fgamification%2Freferral%2Froute.ts&appDir=D%3A%5Cmobile%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=D%3A%5Cmobile&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fgamification%2Freferral%2Froute&page=%2Fapi%2Fgamification%2Freferral%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fgamification%2Freferral%2Froute.ts&appDir=D%3A%5Cmobile%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=D%3A%5Cmobile&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!
  \***************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   headerHooks: () => (/* binding */ headerHooks),\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage),\n/* harmony export */   staticGenerationBailout: () => (/* binding */ staticGenerationBailout)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var D_mobile_app_api_gamification_referral_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./app/api/gamification/referral/route.ts */ \"(rsc)/./app/api/gamification/referral/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/gamification/referral/route\",\n        pathname: \"/api/gamification/referral\",\n        filename: \"route\",\n        bundlePath: \"app/api/gamification/referral/route\"\n    },\n    resolvedPagePath: \"D:\\\\mobile\\\\app\\\\api\\\\gamification\\\\referral\\\\route.ts\",\n    nextConfigOutput,\n    userland: D_mobile_app_api_gamification_referral_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks, headerHooks, staticGenerationBailout } = routeModule;\nconst originalPathname = \"/api/gamification/referral/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZnYW1pZmljYXRpb24lMkZyZWZlcnJhbCUyRnJvdXRlJnBhZ2U9JTJGYXBpJTJGZ2FtaWZpY2F0aW9uJTJGcmVmZXJyYWwlMkZyb3V0ZSZhcHBQYXRocz0mcGFnZVBhdGg9cHJpdmF0ZS1uZXh0LWFwcC1kaXIlMkZhcGklMkZnYW1pZmljYXRpb24lMkZyZWZlcnJhbCUyRnJvdXRlLnRzJmFwcERpcj1EJTNBJTVDbW9iaWxlJTVDYXBwJnBhZ2VFeHRlbnNpb25zPXRzeCZwYWdlRXh0ZW5zaW9ucz10cyZwYWdlRXh0ZW5zaW9ucz1qc3gmcGFnZUV4dGVuc2lvbnM9anMmcm9vdERpcj1EJTNBJTVDbW9iaWxlJmlzRGV2PXRydWUmdHNjb25maWdQYXRoPXRzY29uZmlnLmpzb24mYmFzZVBhdGg9JmFzc2V0UHJlZml4PSZuZXh0Q29uZmlnT3V0cHV0PSZwcmVmZXJyZWRSZWdpb249Jm1pZGRsZXdhcmVDb25maWc9ZTMwJTNEISIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7OztBQUFzRztBQUN2QztBQUNjO0FBQ007QUFDbkY7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLGdIQUFtQjtBQUMzQztBQUNBLGNBQWMseUVBQVM7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLFlBQVk7QUFDWixDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0EsUUFBUSx1R0FBdUc7QUFDL0c7QUFDQTtBQUNBLFdBQVcsNEVBQVc7QUFDdEI7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUM2Sjs7QUFFN0oiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wcm9kby1hZ2VuY3kvPzdiZmIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQXBwUm91dGVSb3V0ZU1vZHVsZSB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1tb2R1bGVzL2FwcC1yb3V0ZS9tb2R1bGUuY29tcGlsZWRcIjtcbmltcG9ydCB7IFJvdXRlS2luZCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1raW5kXCI7XG5pbXBvcnQgeyBwYXRjaEZldGNoIGFzIF9wYXRjaEZldGNoIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvbGliL3BhdGNoLWZldGNoXCI7XG5pbXBvcnQgKiBhcyB1c2VybGFuZCBmcm9tIFwiRDpcXFxcbW9iaWxlXFxcXGFwcFxcXFxhcGlcXFxcZ2FtaWZpY2F0aW9uXFxcXHJlZmVycmFsXFxcXHJvdXRlLnRzXCI7XG4vLyBXZSBpbmplY3QgdGhlIG5leHRDb25maWdPdXRwdXQgaGVyZSBzbyB0aGF0IHdlIGNhbiB1c2UgdGhlbSBpbiB0aGUgcm91dGVcbi8vIG1vZHVsZS5cbmNvbnN0IG5leHRDb25maWdPdXRwdXQgPSBcIlwiXG5jb25zdCByb3V0ZU1vZHVsZSA9IG5ldyBBcHBSb3V0ZVJvdXRlTW9kdWxlKHtcbiAgICBkZWZpbml0aW9uOiB7XG4gICAgICAgIGtpbmQ6IFJvdXRlS2luZC5BUFBfUk9VVEUsXG4gICAgICAgIHBhZ2U6IFwiL2FwaS9nYW1pZmljYXRpb24vcmVmZXJyYWwvcm91dGVcIixcbiAgICAgICAgcGF0aG5hbWU6IFwiL2FwaS9nYW1pZmljYXRpb24vcmVmZXJyYWxcIixcbiAgICAgICAgZmlsZW5hbWU6IFwicm91dGVcIixcbiAgICAgICAgYnVuZGxlUGF0aDogXCJhcHAvYXBpL2dhbWlmaWNhdGlvbi9yZWZlcnJhbC9yb3V0ZVwiXG4gICAgfSxcbiAgICByZXNvbHZlZFBhZ2VQYXRoOiBcIkQ6XFxcXG1vYmlsZVxcXFxhcHBcXFxcYXBpXFxcXGdhbWlmaWNhdGlvblxcXFxyZWZlcnJhbFxcXFxyb3V0ZS50c1wiLFxuICAgIG5leHRDb25maWdPdXRwdXQsXG4gICAgdXNlcmxhbmRcbn0pO1xuLy8gUHVsbCBvdXQgdGhlIGV4cG9ydHMgdGhhdCB3ZSBuZWVkIHRvIGV4cG9zZSBmcm9tIHRoZSBtb2R1bGUuIFRoaXMgc2hvdWxkXG4vLyBiZSBlbGltaW5hdGVkIHdoZW4gd2UndmUgbW92ZWQgdGhlIG90aGVyIHJvdXRlcyB0byB0aGUgbmV3IGZvcm1hdC4gVGhlc2Vcbi8vIGFyZSB1c2VkIHRvIGhvb2sgaW50byB0aGUgcm91dGUuXG5jb25zdCB7IHJlcXVlc3RBc3luY1N0b3JhZ2UsIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2UsIHNlcnZlckhvb2tzLCBoZWFkZXJIb29rcywgc3RhdGljR2VuZXJhdGlvbkJhaWxvdXQgfSA9IHJvdXRlTW9kdWxlO1xuY29uc3Qgb3JpZ2luYWxQYXRobmFtZSA9IFwiL2FwaS9nYW1pZmljYXRpb24vcmVmZXJyYWwvcm91dGVcIjtcbmZ1bmN0aW9uIHBhdGNoRmV0Y2goKSB7XG4gICAgcmV0dXJuIF9wYXRjaEZldGNoKHtcbiAgICAgICAgc2VydmVySG9va3MsXG4gICAgICAgIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2VcbiAgICB9KTtcbn1cbmV4cG9ydCB7IHJvdXRlTW9kdWxlLCByZXF1ZXN0QXN5bmNTdG9yYWdlLCBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlLCBzZXJ2ZXJIb29rcywgaGVhZGVySG9va3MsIHN0YXRpY0dlbmVyYXRpb25CYWlsb3V0LCBvcmlnaW5hbFBhdGhuYW1lLCBwYXRjaEZldGNoLCAgfTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YXBwLXJvdXRlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fgamification%2Freferral%2Froute&page=%2Fapi%2Fgamification%2Freferral%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fgamification%2Freferral%2Froute.ts&appDir=D%3A%5Cmobile%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=D%3A%5Cmobile&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./app/api/gamification/referral/route.ts":
/*!************************************************!*\
  !*** ./app/api/gamification/referral/route.ts ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GET: () => (/* binding */ GET),\n/* harmony export */   POST: () => (/* binding */ POST),\n/* harmony export */   PUT: () => (/* binding */ PUT)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/web/exports/next-response */ \"(rsc)/./node_modules/next/dist/server/web/exports/next-response.js\");\n/* harmony import */ var _lib_gamification_referralService__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../lib/gamification/referralService */ \"(rsc)/./lib/gamification/referralService.ts\");\n\n\nconst referralService = new _lib_gamification_referralService__WEBPACK_IMPORTED_MODULE_1__.ReferralService();\nasync function GET(request) {\n    try {\n        const { searchParams } = new URL(request.url);\n        const userId = searchParams.get(\"userId\");\n        if (!userId) {\n            return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                error: \"User ID is required\"\n            }, {\n                status: 400\n            });\n        }\n        const stats = await referralService.getReferralStats(parseInt(userId));\n        return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n            success: true,\n            data: stats\n        });\n    } catch (error) {\n        console.error(\"Error fetching referral stats:\", error);\n        return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n            error: \"Failed to fetch referral stats\"\n        }, {\n            status: 500\n        });\n    }\n}\nasync function POST(request) {\n    try {\n        const body = await request.json();\n        const { userId, referralCode } = body;\n        if (!userId || !referralCode) {\n            return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                error: \"User ID and referral code are required\"\n            }, {\n                status: 400\n            });\n        }\n        const result = await referralService.useReferralCode(parseInt(userId), referralCode);\n        return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json(result);\n    } catch (error) {\n        console.error(\"Error using referral code:\", error);\n        return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n            error: \"Failed to use referral code\"\n        }, {\n            status: 500\n        });\n    }\n}\nasync function PUT(request) {\n    try {\n        const body = await request.json();\n        const { userId } = body;\n        if (!userId) {\n            return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                error: \"User ID is required\"\n            }, {\n                status: 400\n            });\n        }\n        const referralCode = await referralService.createReferralCode(parseInt(userId));\n        return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n            success: true,\n            referralCode\n        });\n    } catch (error) {\n        console.error(\"Error creating referral code:\", error);\n        return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n            error: \"Failed to create referral code\"\n        }, {\n            status: 500\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9hcHAvYXBpL2dhbWlmaWNhdGlvbi9yZWZlcnJhbC9yb3V0ZS50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUF1RDtBQUN1QjtBQUU5RSxNQUFNRSxrQkFBa0IsSUFBSUQsOEVBQWVBO0FBRXBDLGVBQWVFLElBQUlDLE9BQW9CO0lBQzVDLElBQUk7UUFDRixNQUFNLEVBQUVDLFlBQVksRUFBRSxHQUFHLElBQUlDLElBQUlGLFFBQVFHLEdBQUc7UUFDNUMsTUFBTUMsU0FBU0gsYUFBYUksR0FBRyxDQUFDO1FBRWhDLElBQUksQ0FBQ0QsUUFBUTtZQUNYLE9BQU9SLGtGQUFZQSxDQUFDVSxJQUFJLENBQUM7Z0JBQUVDLE9BQU87WUFBc0IsR0FBRztnQkFBRUMsUUFBUTtZQUFJO1FBQzNFO1FBRUEsTUFBTUMsUUFBUSxNQUFNWCxnQkFBZ0JZLGdCQUFnQixDQUFDQyxTQUFTUDtRQUU5RCxPQUFPUixrRkFBWUEsQ0FBQ1UsSUFBSSxDQUFDO1lBQUVNLFNBQVM7WUFBTUMsTUFBTUo7UUFBTTtJQUN4RCxFQUFFLE9BQU9GLE9BQU87UUFDZE8sUUFBUVAsS0FBSyxDQUFDLGtDQUFrQ0E7UUFDaEQsT0FBT1gsa0ZBQVlBLENBQUNVLElBQUksQ0FDdEI7WUFBRUMsT0FBTztRQUFpQyxHQUMxQztZQUFFQyxRQUFRO1FBQUk7SUFFbEI7QUFDRjtBQUVPLGVBQWVPLEtBQUtmLE9BQW9CO0lBQzdDLElBQUk7UUFDRixNQUFNZ0IsT0FBTyxNQUFNaEIsUUFBUU0sSUFBSTtRQUMvQixNQUFNLEVBQUVGLE1BQU0sRUFBRWEsWUFBWSxFQUFFLEdBQUdEO1FBRWpDLElBQUksQ0FBQ1osVUFBVSxDQUFDYSxjQUFjO1lBQzVCLE9BQU9yQixrRkFBWUEsQ0FBQ1UsSUFBSSxDQUFDO2dCQUFFQyxPQUFPO1lBQXlDLEdBQUc7Z0JBQUVDLFFBQVE7WUFBSTtRQUM5RjtRQUVBLE1BQU1VLFNBQVMsTUFBTXBCLGdCQUFnQnFCLGVBQWUsQ0FBQ1IsU0FBU1AsU0FBU2E7UUFFdkUsT0FBT3JCLGtGQUFZQSxDQUFDVSxJQUFJLENBQUNZO0lBQzNCLEVBQUUsT0FBT1gsT0FBTztRQUNkTyxRQUFRUCxLQUFLLENBQUMsOEJBQThCQTtRQUM1QyxPQUFPWCxrRkFBWUEsQ0FBQ1UsSUFBSSxDQUN0QjtZQUFFQyxPQUFPO1FBQThCLEdBQ3ZDO1lBQUVDLFFBQVE7UUFBSTtJQUVsQjtBQUNGO0FBRU8sZUFBZVksSUFBSXBCLE9BQW9CO0lBQzVDLElBQUk7UUFDRixNQUFNZ0IsT0FBTyxNQUFNaEIsUUFBUU0sSUFBSTtRQUMvQixNQUFNLEVBQUVGLE1BQU0sRUFBRSxHQUFHWTtRQUVuQixJQUFJLENBQUNaLFFBQVE7WUFDWCxPQUFPUixrRkFBWUEsQ0FBQ1UsSUFBSSxDQUFDO2dCQUFFQyxPQUFPO1lBQXNCLEdBQUc7Z0JBQUVDLFFBQVE7WUFBSTtRQUMzRTtRQUVBLE1BQU1TLGVBQWUsTUFBTW5CLGdCQUFnQnVCLGtCQUFrQixDQUFDVixTQUFTUDtRQUV2RSxPQUFPUixrRkFBWUEsQ0FBQ1UsSUFBSSxDQUFDO1lBQUVNLFNBQVM7WUFBTUs7UUFBYTtJQUN6RCxFQUFFLE9BQU9WLE9BQU87UUFDZE8sUUFBUVAsS0FBSyxDQUFDLGlDQUFpQ0E7UUFDL0MsT0FBT1gsa0ZBQVlBLENBQUNVLElBQUksQ0FDdEI7WUFBRUMsT0FBTztRQUFpQyxHQUMxQztZQUFFQyxRQUFRO1FBQUk7SUFFbEI7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL3Byb2RvLWFnZW5jeS8uL2FwcC9hcGkvZ2FtaWZpY2F0aW9uL3JlZmVycmFsL3JvdXRlLnRzPzQyODIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmV4dFJlcXVlc3QsIE5leHRSZXNwb25zZSB9IGZyb20gJ25leHQvc2VydmVyJ1xuaW1wb3J0IHsgUmVmZXJyYWxTZXJ2aWNlIH0gZnJvbSAnLi4vLi4vLi4vLi4vbGliL2dhbWlmaWNhdGlvbi9yZWZlcnJhbFNlcnZpY2UnXG5cbmNvbnN0IHJlZmVycmFsU2VydmljZSA9IG5ldyBSZWZlcnJhbFNlcnZpY2UoKVxuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gR0VUKHJlcXVlc3Q6IE5leHRSZXF1ZXN0KSB7XG4gIHRyeSB7XG4gICAgY29uc3QgeyBzZWFyY2hQYXJhbXMgfSA9IG5ldyBVUkwocmVxdWVzdC51cmwpXG4gICAgY29uc3QgdXNlcklkID0gc2VhcmNoUGFyYW1zLmdldCgndXNlcklkJylcblxuICAgIGlmICghdXNlcklkKSB7XG4gICAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oeyBlcnJvcjogJ1VzZXIgSUQgaXMgcmVxdWlyZWQnIH0sIHsgc3RhdHVzOiA0MDAgfSlcbiAgICB9XG5cbiAgICBjb25zdCBzdGF0cyA9IGF3YWl0IHJlZmVycmFsU2VydmljZS5nZXRSZWZlcnJhbFN0YXRzKHBhcnNlSW50KHVzZXJJZCkpXG4gICAgXG4gICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKHsgc3VjY2VzczogdHJ1ZSwgZGF0YTogc3RhdHMgfSlcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBjb25zb2xlLmVycm9yKCdFcnJvciBmZXRjaGluZyByZWZlcnJhbCBzdGF0czonLCBlcnJvcilcbiAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oXG4gICAgICB7IGVycm9yOiAnRmFpbGVkIHRvIGZldGNoIHJlZmVycmFsIHN0YXRzJyB9LFxuICAgICAgeyBzdGF0dXM6IDUwMCB9XG4gICAgKVxuICB9XG59XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBQT1NUKHJlcXVlc3Q6IE5leHRSZXF1ZXN0KSB7XG4gIHRyeSB7XG4gICAgY29uc3QgYm9keSA9IGF3YWl0IHJlcXVlc3QuanNvbigpXG4gICAgY29uc3QgeyB1c2VySWQsIHJlZmVycmFsQ29kZSB9ID0gYm9keVxuXG4gICAgaWYgKCF1c2VySWQgfHwgIXJlZmVycmFsQ29kZSkge1xuICAgICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKHsgZXJyb3I6ICdVc2VyIElEIGFuZCByZWZlcnJhbCBjb2RlIGFyZSByZXF1aXJlZCcgfSwgeyBzdGF0dXM6IDQwMCB9KVxuICAgIH1cblxuICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IHJlZmVycmFsU2VydmljZS51c2VSZWZlcnJhbENvZGUocGFyc2VJbnQodXNlcklkKSwgcmVmZXJyYWxDb2RlKVxuICAgIFxuICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbihyZXN1bHQpXG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS5lcnJvcignRXJyb3IgdXNpbmcgcmVmZXJyYWwgY29kZTonLCBlcnJvcilcbiAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oXG4gICAgICB7IGVycm9yOiAnRmFpbGVkIHRvIHVzZSByZWZlcnJhbCBjb2RlJyB9LFxuICAgICAgeyBzdGF0dXM6IDUwMCB9XG4gICAgKVxuICB9XG59XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBQVVQocmVxdWVzdDogTmV4dFJlcXVlc3QpIHtcbiAgdHJ5IHtcbiAgICBjb25zdCBib2R5ID0gYXdhaXQgcmVxdWVzdC5qc29uKClcbiAgICBjb25zdCB7IHVzZXJJZCB9ID0gYm9keVxuXG4gICAgaWYgKCF1c2VySWQpIHtcbiAgICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbih7IGVycm9yOiAnVXNlciBJRCBpcyByZXF1aXJlZCcgfSwgeyBzdGF0dXM6IDQwMCB9KVxuICAgIH1cblxuICAgIGNvbnN0IHJlZmVycmFsQ29kZSA9IGF3YWl0IHJlZmVycmFsU2VydmljZS5jcmVhdGVSZWZlcnJhbENvZGUocGFyc2VJbnQodXNlcklkKSlcbiAgICBcbiAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oeyBzdWNjZXNzOiB0cnVlLCByZWZlcnJhbENvZGUgfSlcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBjb25zb2xlLmVycm9yKCdFcnJvciBjcmVhdGluZyByZWZlcnJhbCBjb2RlOicsIGVycm9yKVxuICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbihcbiAgICAgIHsgZXJyb3I6ICdGYWlsZWQgdG8gY3JlYXRlIHJlZmVycmFsIGNvZGUnIH0sXG4gICAgICB7IHN0YXR1czogNTAwIH1cbiAgICApXG4gIH1cbn0iXSwibmFtZXMiOlsiTmV4dFJlc3BvbnNlIiwiUmVmZXJyYWxTZXJ2aWNlIiwicmVmZXJyYWxTZXJ2aWNlIiwiR0VUIiwicmVxdWVzdCIsInNlYXJjaFBhcmFtcyIsIlVSTCIsInVybCIsInVzZXJJZCIsImdldCIsImpzb24iLCJlcnJvciIsInN0YXR1cyIsInN0YXRzIiwiZ2V0UmVmZXJyYWxTdGF0cyIsInBhcnNlSW50Iiwic3VjY2VzcyIsImRhdGEiLCJjb25zb2xlIiwiUE9TVCIsImJvZHkiLCJyZWZlcnJhbENvZGUiLCJyZXN1bHQiLCJ1c2VSZWZlcnJhbENvZGUiLCJQVVQiLCJjcmVhdGVSZWZlcnJhbENvZGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./app/api/gamification/referral/route.ts\n");

/***/ }),

/***/ "(rsc)/./lib/email/emailService.ts":
/*!***********************************!*\
  !*** ./lib/email/emailService.ts ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EmailService: () => (/* binding */ EmailService),\n/* harmony export */   emailService: () => (/* binding */ emailService)\n/* harmony export */ });\n/* harmony import */ var nodemailer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! nodemailer */ \"(rsc)/./node_modules/nodemailer/lib/nodemailer.js\");\n\nclass EmailService {\n    constructor(){\n        this.initialize();\n    }\n    initialize() {\n        // Проверяем наличие Gmail настроек\n        this.isDevelopment = !process.env.EMAIL_HOST || !process.env.EMAIL_USER || !process.env.EMAIL_PASS;\n        console.log(\"\\uD83D\\uDD27 EmailService инициализация:\");\n        console.log(`   EMAIL_HOST: ${process.env.EMAIL_HOST || \"НЕ УСТАНОВЛЕН\"}`);\n        console.log(`   EMAIL_USER: ${process.env.EMAIL_USER || \"НЕ УСТАНОВЛЕН\"}`);\n        console.log(`   EMAIL_PASS: ${process.env.EMAIL_PASS ? \"УСТАНОВЛЕН\" : \"НЕ УСТАНОВЛЕН\"}`);\n        console.log(`   Режим: ${this.isDevelopment ? \"РАЗРАБОТКИ\" : \"ПРОДАКШЕН\"}`);\n        if (this.isDevelopment) {\n            // Для разработки используем мок-транспорт\n            this.transporter = nodemailer__WEBPACK_IMPORTED_MODULE_0__.createTransport({\n                streamTransport: true,\n                newline: \"unix\",\n                buffer: true\n            });\n        } else {\n            // Для продакшена используем реальный SMTP\n            this.transporter = nodemailer__WEBPACK_IMPORTED_MODULE_0__.createTransport({\n                host: \"smtp.gmail.com\",\n                port: 587,\n                secure: false,\n                auth: {\n                    user: process.env.EMAIL_USER || \"\",\n                    pass: process.env.EMAIL_PASS || \"\"\n                },\n                tls: {\n                    rejectUnauthorized: false\n                }\n            });\n        }\n    }\n    // Переинициализация после загрузки переменных окружения\n    reinitialize() {\n        this.initialize();\n    }\n    // Проверка подключения\n    async verifyConnection() {\n        try {\n            if (this.isDevelopment) {\n                console.log(\"✅ Email сервер готов к отправке (режим разработки)\");\n                return true;\n            }\n            // Проверяем Gmail SMTP подключение\n            await this.transporter.verify();\n            console.log(\"✅ Email сервер готов к отправке\");\n            return true;\n        } catch (error) {\n            console.error(\"❌ Ошибка подключения к email серверу:\", error);\n            return false;\n        }\n    }\n    // Отправка email\n    async sendEmail(to, template) {\n        try {\n            if (this.isDevelopment) {\n                // В режиме разработки логируем с деталями\n                console.log(\"\\uD83D\\uDCE7 [DEV] Email отправлен:\");\n                console.log(`   Кому: ${to}`);\n                console.log(`   Тема: ${template.subject}`);\n                console.log(`   HTML: ${template.html.substring(0, 100)}...`);\n                console.log(`   📝 В продакшене это письмо будет отправлено на: ${to}`);\n                return true;\n            }\n            // Используем Gmail SMTP для отправки\n            const mailOptions = {\n                from: process.env.EMAIL_USER,\n                to: to,\n                subject: template.subject,\n                html: template.html,\n                text: template.text\n            };\n            await this.transporter.sendMail(mailOptions);\n            console.log(\"\\uD83D\\uDCE7 Email отправлен через Gmail:\", to);\n            return true;\n        } catch (error) {\n            console.error(\"❌ Ошибка отправки email:\", error);\n            return false;\n        }\n    }\n    // Отправка уведомления о новом заказе (исполнителю)\n    async sendNewOrderNotification(executorEmail, orderData) {\n        if (this.isDevelopment) {\n            return await this.sendEmail(executorEmail, {\n                subject: \"\\uD83C\\uDFAF Новый заказ для вас!\",\n                html: `\n          <div style=\"font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;\">\n            <div style=\"background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); padding: 20px; text-align: center;\">\n              <h1 style=\"color: white; margin: 0;\">🎯 Новый заказ!</h1>\n            </div>\n            \n            <div style=\"padding: 20px; background: #f8f9fa;\">\n              <h2 style=\"color: #333;\">Детали заказа:</h2>\n              <div style=\"background: white; padding: 15px; border-radius: 8px; margin: 10px 0;\">\n                <p><strong>Услуга:</strong> ${orderData.serviceDescription || \"Не указано\"}</p>\n                <p><strong>Клиент:</strong> ${orderData.clientName || \"Не указано\"}</p>\n                <p><strong>Адрес:</strong> ${orderData.address || \"Не указано\"}</p>\n                <p><strong>Телефон:</strong> ${orderData.phone || \"Не указано\"}</p>\n                <p><strong>Дата:</strong> ${orderData.orderDate || \"Не указано\"}</p>\n                <p><strong>Время:</strong> ${orderData.orderTime || \"Не указано\"}</p>\n                <p><strong>Цена:</strong> ${orderData.totalPrice || 0} ₽</p>\n              </div>\n            </div>\n          </div>\n        `,\n                text: `Новый заказ! Услуга: ${orderData.serviceDescription}, Клиент: ${orderData.clientName}, Цена: ${orderData.totalPrice} ₽`\n            });\n        }\n        return await this.sendEmail(executorEmail, {\n            subject: \"\\uD83C\\uDFAF Новый заказ для вас!\",\n            html: `\n        <div style=\"font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;\">\n          <div style=\"background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); padding: 20px; text-align: center;\">\n            <h1 style=\"color: white; margin: 0;\">🎯 Новый заказ!</h1>\n          </div>\n          \n          <div style=\"padding: 20px; background: #f8f9fa;\">\n            <h2 style=\"color: #333;\">Детали заказа:</h2>\n            <div style=\"background: white; padding: 15px; border-radius: 8px; margin: 10px 0;\">\n              <p><strong>Услуга:</strong> ${orderData.serviceDescription || \"Не указано\"}</p>\n              <p><strong>Клиент:</strong> ${orderData.clientName || \"Не указано\"}</p>\n              <p><strong>Адрес:</strong> ${orderData.address || \"Не указано\"}</p>\n              <p><strong>Телефон:</strong> ${orderData.phone || \"Не указано\"}</p>\n              <p><strong>Дата:</strong> ${orderData.orderDate || \"Не указано\"}</p>\n              <p><strong>Время:</strong> ${orderData.orderTime || \"Не указано\"}</p>\n              <p><strong>Цена:</strong> ${orderData.totalPrice || 0} ₽</p>\n            </div>\n          </div>\n        </div>\n      `,\n            text: `Новый заказ! Услуга: ${orderData.serviceDescription}, Клиент: ${orderData.clientName}, Цена: ${orderData.totalPrice} ₽`\n        });\n    }\n    // Отправка уведомления о выполнении заказа (клиенту)\n    async sendOrderCompletedNotification(clientEmail, orderData) {\n        if (this.isDevelopment) {\n            return await this.sendEmail(clientEmail, {\n                subject: \"✅ Ваш заказ выполнен!\",\n                html: `\n          <div style=\"font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;\">\n            <div style=\"background: linear-gradient(135deg, #28a745 0%, #20c997 100%); padding: 20px; text-align: center;\">\n              <h1 style=\"color: white; margin: 0;\">✅ Заказ выполнен!</h1>\n            </div>\n            \n            <div style=\"padding: 20px; background: #f8f9fa;\">\n              <h2 style=\"color: #333;\">Ваш заказ успешно выполнен!</h2>\n              <div style=\"background: white; padding: 15px; border-radius: 8px; margin: 10px 0;\">\n                <p><strong>Услуга:</strong> ${orderData.serviceDescription || \"Не указано\"}</p>\n                <p><strong>Исполнитель:</strong> ${orderData.executorName || \"Не указано\"}</p>\n                <p><strong>Дата выполнения:</strong> ${new Date().toLocaleDateString(\"ru-RU\")}</p>\n                <p><strong>Сумма:</strong> ${orderData.totalPrice || 0} ₽</p>\n              </div>\n            </div>\n          </div>\n        `,\n                text: `Заказ выполнен! Услуга: ${orderData.serviceDescription}, Исполнитель: ${orderData.executorName}, Сумма: ${orderData.totalPrice} ₽`\n            });\n        }\n        return await this.sendEmail(clientEmail, {\n            subject: \"✅ Ваш заказ выполнен!\",\n            html: `\n        <div style=\"font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;\">\n          <div style=\"background: linear-gradient(135deg, #28a745 0%, #20c997 100%); padding: 20px; text-align: center;\">\n            <h1 style=\"color: white; margin: 0;\">✅ Заказ выполнен!</h1>\n          </div>\n          \n          <div style=\"padding: 20px; background: #f8f9fa;\">\n            <h2 style=\"color: #333;\">Ваш заказ успешно выполнен!</h2>\n            <div style=\"background: white; padding: 15px; border-radius: 8px; margin: 10px 0;\">\n              <p><strong>Услуга:</strong> ${orderData.serviceDescription || \"Не указано\"}</p>\n              <p><strong>Исполнитель:</strong> ${orderData.executorName || \"Не указано\"}</p>\n              <p><strong>Дата выполнения:</strong> ${new Date().toLocaleDateString(\"ru-RU\")}</p>\n              <p><strong>Сумма:</strong> ${orderData.totalPrice || 0} ₽</p>\n            </div>\n          </div>\n        </div>\n      `,\n            text: `Заказ выполнен! Услуга: ${orderData.serviceDescription}, Исполнитель: ${orderData.executorName}, Сумма: ${orderData.totalPrice} ₽`\n        });\n    }\n    // Отправка уведомления о повышении уровня\n    async sendLevelUpNotification(userEmail, levelData) {\n        if (this.isDevelopment) {\n            return await this.sendEmail(userEmail, {\n                subject: `🎉 Поздравляем! Вы достигли уровня ${levelData.newLevel}!`,\n                html: `\n          <div style=\"font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;\">\n            <div style=\"background: linear-gradient(135deg, #ffd700 0%, #ffed4e 100%); padding: 20px; text-align: center;\">\n              <h1 style=\"color: #333; margin: 0;\">🎉 Поздравляем!</h1>\n              <h2 style=\"color: #333; margin: 10px 0 0 0;\">Вы достигли уровня ${levelData.newLevel}!</h2>\n            </div>\n            \n            <div style=\"padding: 20px; background: #f8f9fa;\">\n              <div style=\"background: white; padding: 20px; border-radius: 8px; margin: 10px 0; text-align: center;\">\n                <div style=\"font-size: 48px; margin-bottom: 15px;\">${levelData.icon}</div>\n                <h3 style=\"color: #333; margin: 0;\">${levelData.title}</h3>\n                <p style=\"color: #666; margin: 10px 0;\">${levelData.description || \"Отличная работа!\"}</p>\n              </div>\n            </div>\n          </div>\n        `,\n                text: `Поздравляем! Вы достигли уровня ${levelData.newLevel} - ${levelData.title}!`\n            });\n        }\n        return await this.sendEmail(userEmail, {\n            subject: `🎉 Поздравляем! Вы достигли уровня ${levelData.newLevel}!`,\n            html: `\n        <div style=\"font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;\">\n          <div style=\"background: linear-gradient(135deg, #ffd700 0%, #ffed4e 100%); padding: 20px; text-align: center;\">\n            <h1 style=\"color: #333; margin: 0;\">🎉 Поздравляем!</h1>\n            <h2 style=\"color: #333; margin: 10px 0 0 0;\">Вы достигли уровня ${levelData.newLevel}!</h2>\n          </div>\n          \n          <div style=\"padding: 20px; background: #f8f9fa;\">\n            <div style=\"background: white; padding: 20px; border-radius: 8px; margin: 10px 0; text-align: center;\">\n              <div style=\"font-size: 48px; margin-bottom: 15px;\">${levelData.icon}</div>\n              <h3 style=\"color: #333; margin: 0;\">${levelData.title}</h3>\n              <p style=\"color: #666; margin: 10px 0;\">${levelData.description || \"Отличная работа!\"}</p>\n            </div>\n          </div>\n        </div>\n      `,\n            text: `Поздравляем! Вы достигли уровня ${levelData.newLevel} - ${levelData.title}!`\n        });\n    }\n    // Отправка новостной рассылки\n    async sendNewsletter(emails, newsletterData) {\n        if (this.isDevelopment) {\n            let success = 0;\n            let failed = 0;\n            for (const email of emails){\n                const result = await this.sendEmail(email, {\n                    subject: newsletterData.subject,\n                    html: `\n            <div style=\"font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;\">\n              <div style=\"background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); padding: 20px; text-align: center;\">\n                <h1 style=\"color: white; margin: 0;\">📢 ${newsletterData.subject}</h1>\n              </div>\n              \n              <div style=\"padding: 20px; background: #f8f9fa;\">\n                <div style=\"background: white; padding: 20px; border-radius: 8px; margin: 10px 0;\">\n                  ${newsletterData.content}\n                </div>\n              </div>\n            </div>\n          `,\n                    text: newsletterData.textContent || newsletterData.subject\n                });\n                if (result) {\n                    success++;\n                } else {\n                    failed++;\n                }\n            }\n            return {\n                success,\n                failed\n            };\n        }\n        let success = 0;\n        let failed = 0;\n        for (const email of emails){\n            const result = await this.sendEmail(email, {\n                subject: newsletterData.subject,\n                html: `\n          <div style=\"font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;\">\n            <div style=\"background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); padding: 20px; text-align: center;\">\n              <h1 style=\"color: white; margin: 0;\">📢 ${newsletterData.subject}</h1>\n            </div>\n            \n            <div style=\"padding: 20px; background: #f8f9fa;\">\n              <div style=\"background: white; padding: 20px; border-radius: 8px; margin: 10px 0;\">\n                ${newsletterData.content}\n              </div>\n            </div>\n          </div>\n        `,\n                text: newsletterData.textContent || newsletterData.subject\n            });\n            if (result) {\n                success++;\n            } else {\n                failed++;\n            }\n        }\n        return {\n            success,\n            failed\n        };\n    }\n}\nconst emailService = new EmailService();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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LFdBQVcsSUFBSU4sZUFBZS9CLE9BQU87WUFDNUQ7WUFFQSxJQUFJbUMsUUFBUTtnQkFDVkg7WUFDRixPQUFPO2dCQUNMQztZQUNGO1FBQ0Y7UUFFQSxPQUFPO1lBQUVEO1lBQVNDO1FBQU87SUFDM0I7QUFDRjtBQUVPLE1BQU1LLGVBQWUsSUFBSXJFLGVBQWMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wcm9kby1hZ2VuY3kvLi9saWIvZW1haWwvZW1haWxTZXJ2aWNlLnRzP2M1ZjYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IG5vZGVtYWlsZXIgZnJvbSAnbm9kZW1haWxlcidcbmltcG9ydCB7IGZvcm1zcHJlZVNlcnZpY2UgfSBmcm9tICcuL2Zvcm1zcHJlZVNlcnZpY2UnXG5cbmludGVyZmFjZSBFbWFpbENvbmZpZyB7XG4gIGhvc3Q6IHN0cmluZ1xuICBwb3J0OiBudW1iZXJcbiAgc2VjdXJlOiBib29sZWFuXG4gIGF1dGg6IHtcbiAgICB1c2VyOiBzdHJpbmdcbiAgICBwYXNzOiBzdHJpbmdcbiAgfVxufVxuXG5pbnRlcmZhY2UgRW1haWxUZW1wbGF0ZSB7XG4gIHN1YmplY3Q6IHN0cmluZ1xuICBodG1sOiBzdHJpbmdcbiAgdGV4dD86IHN0cmluZ1xufVxuXG5leHBvcnQgY2xhc3MgRW1haWxTZXJ2aWNlIHtcbiAgcHJpdmF0ZSB0cmFuc3BvcnRlciE6IG5vZGVtYWlsZXIuVHJhbnNwb3J0ZXJcbiAgcHJpdmF0ZSBpc0RldmVsb3BtZW50ITogYm9vbGVhblxuXG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIHRoaXMuaW5pdGlhbGl6ZSgpXG4gIH1cblxuICBwcml2YXRlIGluaXRpYWxpemUoKSB7XG4gICAgLy8g0J/RgNC+0LLQtdGA0Y/QtdC8INC90LDQu9C40YfQuNC1IEdtYWlsINC90LDRgdGC0YDQvtC10LpcbiAgICB0aGlzLmlzRGV2ZWxvcG1lbnQgPSAhcHJvY2Vzcy5lbnYuRU1BSUxfSE9TVCB8fCAhcHJvY2Vzcy5lbnYuRU1BSUxfVVNFUiB8fCAhcHJvY2Vzcy5lbnYuRU1BSUxfUEFTU1xuICAgIFxuICAgIGNvbnNvbGUubG9nKCfwn5SnIEVtYWlsU2VydmljZSDQuNC90LjRhtC40LDQu9C40LfQsNGG0LjRjzonKVxuICAgIGNvbnNvbGUubG9nKGAgICBFTUFJTF9IT1NUOiAke3Byb2Nlc3MuZW52LkVNQUlMX0hPU1QgfHwgJ9Cd0JUg0KPQodCi0JDQndCe0JLQm9CV0J0nfWApXG4gICAgY29uc29sZS5sb2coYCAgIEVNQUlMX1VTRVI6ICR7cHJvY2Vzcy5lbnYuRU1BSUxfVVNFUiB8fCAn0J3QlSDQo9Ch0KLQkNCd0J7QktCb0JXQnSd9YClcbiAgICBjb25zb2xlLmxvZyhgICAgRU1BSUxfUEFTUzogJHtwcm9jZXNzLmVudi5FTUFJTF9QQVNTID8gJ9Cj0KHQotCQ0J3QntCS0JvQldCdJyA6ICfQndCVINCj0KHQotCQ0J3QntCS0JvQldCdJ31gKVxuICAgIGNvbnNvbGUubG9nKGAgICDQoNC10LbQuNC8OiAke3RoaXMuaXNEZXZlbG9wbWVudCA/ICfQoNCQ0JfQoNCQ0JHQntCi0JrQmCcgOiAn0J/QoNCe0JTQkNCa0KjQldCdJ31gKVxuICAgIFxuICAgIGlmICh0aGlzLmlzRGV2ZWxvcG1lbnQpIHtcbiAgICAgIC8vINCU0LvRjyDRgNCw0LfRgNCw0LHQvtGC0LrQuCDQuNGB0L/QvtC70YzQt9GD0LXQvCDQvNC+0Lot0YLRgNCw0L3RgdC/0L7RgNGCXG4gICAgICB0aGlzLnRyYW5zcG9ydGVyID0gbm9kZW1haWxlci5jcmVhdGVUcmFuc3BvcnQoe1xuICAgICAgICBzdHJlYW1UcmFuc3BvcnQ6IHRydWUsXG4gICAgICAgIG5ld2xpbmU6ICd1bml4JyxcbiAgICAgICAgYnVmZmVyOiB0cnVlXG4gICAgICB9KVxuICAgIH0gZWxzZSB7XG4gICAgICAvLyDQlNC70Y8g0L/RgNC+0LTQsNC60YjQtdC90LAg0LjRgdC/0L7Qu9GM0LfRg9C10Lwg0YDQtdCw0LvRjNC90YvQuSBTTVRQXG4gICAgICB0aGlzLnRyYW5zcG9ydGVyID0gbm9kZW1haWxlci5jcmVhdGVUcmFuc3BvcnQoe1xuICAgICAgICBob3N0OiAnc210cC5nbWFpbC5jb20nLFxuICAgICAgICBwb3J0OiA1ODcsXG4gICAgICAgIHNlY3VyZTogZmFsc2UsXG4gICAgICAgIGF1dGg6IHtcbiAgICAgICAgICB1c2VyOiBwcm9jZXNzLmVudi5FTUFJTF9VU0VSIHx8ICcnLFxuICAgICAgICAgIHBhc3M6IHByb2Nlc3MuZW52LkVNQUlMX1BBU1MgfHwgJydcbiAgICAgICAgfSxcbiAgICAgICAgdGxzOiB7XG4gICAgICAgICAgcmVqZWN0VW5hdXRob3JpemVkOiBmYWxzZVxuICAgICAgICB9XG4gICAgICB9KVxuICAgIH1cbiAgfVxuXG4gIC8vINCf0LXRgNC10LjQvdC40YbQuNCw0LvQuNC30LDRhtC40Y8g0L/QvtGB0LvQtSDQt9Cw0LPRgNGD0LfQutC4INC/0LXRgNC10LzQtdC90L3Ri9GFINC+0LrRgNGD0LbQtdC90LjRj1xuICByZWluaXRpYWxpemUoKSB7XG4gICAgdGhpcy5pbml0aWFsaXplKClcbiAgfVxuXG4gIC8vINCf0YDQvtCy0LXRgNC60LAg0L/QvtC00LrQu9GO0YfQtdC90LjRj1xuICBhc3luYyB2ZXJpZnlDb25uZWN0aW9uKCk6IFByb21pc2U8Ym9vbGVhbj4ge1xuICAgIHRyeSB7XG4gICAgICBpZiAodGhpcy5pc0RldmVsb3BtZW50KSB7XG4gICAgICAgIGNvbnNvbGUubG9nKCfinIUgRW1haWwg0YHQtdGA0LLQtdGAINCz0L7RgtC+0LIg0Log0L7RgtC/0YDQsNCy0LrQtSAo0YDQtdC20LjQvCDRgNCw0LfRgNCw0LHQvtGC0LrQuCknKVxuICAgICAgICByZXR1cm4gdHJ1ZVxuICAgICAgfVxuICAgICAgXG4gICAgICAvLyDQn9GA0L7QstC10YDRj9C10LwgR21haWwgU01UUCDQv9C+0LTQutC70Y7Rh9C10L3QuNC1XG4gICAgICBcbiAgICAgIGF3YWl0IHRoaXMudHJhbnNwb3J0ZXIudmVyaWZ5KClcbiAgICAgIGNvbnNvbGUubG9nKCfinIUgRW1haWwg0YHQtdGA0LLQtdGAINCz0L7RgtC+0LIg0Log0L7RgtC/0YDQsNCy0LrQtScpXG4gICAgICByZXR1cm4gdHJ1ZVxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICBjb25zb2xlLmVycm9yKCfinYwg0J7RiNC40LHQutCwINC/0L7QtNC60LvRjtGH0LXQvdC40Y8g0LogZW1haWwg0YHQtdGA0LLQtdGA0YM6JywgZXJyb3IpXG4gICAgICByZXR1cm4gZmFsc2VcbiAgICB9XG4gIH1cblxuICAvLyDQntGC0L/RgNCw0LLQutCwIGVtYWlsXG4gIGFzeW5jIHNlbmRFbWFpbCh0bzogc3RyaW5nLCB0ZW1wbGF0ZTogRW1haWxUZW1wbGF0ZSk6IFByb21pc2U8Ym9vbGVhbj4ge1xuICAgIHRyeSB7XG4gICAgICBpZiAodGhpcy5pc0RldmVsb3BtZW50KSB7XG4gICAgICAgIC8vINCSINGA0LXQttC40LzQtSDRgNCw0LfRgNCw0LHQvtGC0LrQuCDQu9C+0LPQuNGA0YPQtdC8INGBINC00LXRgtCw0LvRj9C80LhcbiAgICAgICAgY29uc29sZS5sb2coJ/Cfk6cgW0RFVl0gRW1haWwg0L7RgtC/0YDQsNCy0LvQtdC9OicpXG4gICAgICAgIGNvbnNvbGUubG9nKGAgICDQmtC+0LzRgzogJHt0b31gKVxuICAgICAgICBjb25zb2xlLmxvZyhgICAg0KLQtdC80LA6ICR7dGVtcGxhdGUuc3ViamVjdH1gKVxuICAgICAgICBjb25zb2xlLmxvZyhgICAgSFRNTDogJHt0ZW1wbGF0ZS5odG1sLnN1YnN0cmluZygwLCAxMDApfS4uLmApXG4gICAgICAgIGNvbnNvbGUubG9nKGAgICDwn5OdINCSINC/0YDQvtC00LDQutGI0LXQvdC1INGN0YLQviDQv9C40YHRjNC80L4g0LHRg9C00LXRgiDQvtGC0L/RgNCw0LLQu9C10L3QviDQvdCwOiAke3RvfWApXG4gICAgICAgIHJldHVybiB0cnVlXG4gICAgICB9XG5cbiAgICAgIC8vINCY0YHQv9C+0LvRjNC30YPQtdC8IEdtYWlsIFNNVFAg0LTQu9GPINC+0YLQv9GA0LDQstC60LhcbiAgICAgIGNvbnN0IG1haWxPcHRpb25zID0ge1xuICAgICAgICBmcm9tOiBwcm9jZXNzLmVudi5FTUFJTF9VU0VSLFxuICAgICAgICB0bzogdG8sXG4gICAgICAgIHN1YmplY3Q6IHRlbXBsYXRlLnN1YmplY3QsXG4gICAgICAgIGh0bWw6IHRlbXBsYXRlLmh0bWwsXG4gICAgICAgIHRleHQ6IHRlbXBsYXRlLnRleHRcbiAgICAgIH1cblxuICAgICAgYXdhaXQgdGhpcy50cmFuc3BvcnRlci5zZW5kTWFpbChtYWlsT3B0aW9ucylcbiAgICAgIGNvbnNvbGUubG9nKCfwn5OnIEVtYWlsINC+0YLQv9GA0LDQstC70LXQvSDRh9C10YDQtdC3IEdtYWlsOicsIHRvKVxuICAgICAgcmV0dXJuIHRydWVcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgY29uc29sZS5lcnJvcign4p2MINCe0YjQuNCx0LrQsCDQvtGC0L/RgNCw0LLQutC4IGVtYWlsOicsIGVycm9yKVxuICAgICAgcmV0dXJuIGZhbHNlXG4gICAgfVxuICB9XG5cbiAgLy8g0J7RgtC/0YDQsNCy0LrQsCDRg9Cy0LXQtNC+0LzQu9C10L3QuNGPINC+INC90L7QstC+0Lwg0LfQsNC60LDQt9C1ICjQuNGB0L/QvtC70L3QuNGC0LXQu9GOKVxuICBhc3luYyBzZW5kTmV3T3JkZXJOb3RpZmljYXRpb24oZXhlY3V0b3JFbWFpbDogc3RyaW5nLCBvcmRlckRhdGE6IGFueSk6IFByb21pc2U8Ym9vbGVhbj4ge1xuICAgIGlmICh0aGlzLmlzRGV2ZWxvcG1lbnQpIHtcbiAgICAgIHJldHVybiBhd2FpdCB0aGlzLnNlbmRFbWFpbChleGVjdXRvckVtYWlsLCB7XG4gICAgICAgIHN1YmplY3Q6ICfwn46vINCd0L7QstGL0Lkg0LfQsNC60LDQtyDQtNC70Y8g0LLQsNGBIScsXG4gICAgICAgIGh0bWw6IGBcbiAgICAgICAgICA8ZGl2IHN0eWxlPVwiZm9udC1mYW1pbHk6IEFyaWFsLCBzYW5zLXNlcmlmOyBtYXgtd2lkdGg6IDYwMHB4OyBtYXJnaW46IDAgYXV0bztcIj5cbiAgICAgICAgICAgIDxkaXYgc3R5bGU9XCJiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoMTM1ZGVnLCAjNjY3ZWVhIDAlLCAjNzY0YmEyIDEwMCUpOyBwYWRkaW5nOiAyMHB4OyB0ZXh0LWFsaWduOiBjZW50ZXI7XCI+XG4gICAgICAgICAgICAgIDxoMSBzdHlsZT1cImNvbG9yOiB3aGl0ZTsgbWFyZ2luOiAwO1wiPvCfjq8g0J3QvtCy0YvQuSDQt9Cw0LrQsNC3ITwvaDE+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIFxuICAgICAgICAgICAgPGRpdiBzdHlsZT1cInBhZGRpbmc6IDIwcHg7IGJhY2tncm91bmQ6ICNmOGY5ZmE7XCI+XG4gICAgICAgICAgICAgIDxoMiBzdHlsZT1cImNvbG9yOiAjMzMzO1wiPtCU0LXRgtCw0LvQuCDQt9Cw0LrQsNC30LA6PC9oMj5cbiAgICAgICAgICAgICAgPGRpdiBzdHlsZT1cImJhY2tncm91bmQ6IHdoaXRlOyBwYWRkaW5nOiAxNXB4OyBib3JkZXItcmFkaXVzOiA4cHg7IG1hcmdpbjogMTBweCAwO1wiPlxuICAgICAgICAgICAgICAgIDxwPjxzdHJvbmc+0KPRgdC70YPQs9CwOjwvc3Ryb25nPiAke29yZGVyRGF0YS5zZXJ2aWNlRGVzY3JpcHRpb24gfHwgJ9Cd0LUg0YPQutCw0LfQsNC90L4nfTwvcD5cbiAgICAgICAgICAgICAgICA8cD48c3Ryb25nPtCa0LvQuNC10L3Rgjo8L3N0cm9uZz4gJHtvcmRlckRhdGEuY2xpZW50TmFtZSB8fCAn0J3QtSDRg9C60LDQt9Cw0L3Qvid9PC9wPlxuICAgICAgICAgICAgICAgIDxwPjxzdHJvbmc+0JDQtNGA0LXRgTo8L3N0cm9uZz4gJHtvcmRlckRhdGEuYWRkcmVzcyB8fCAn0J3QtSDRg9C60LDQt9Cw0L3Qvid9PC9wPlxuICAgICAgICAgICAgICAgIDxwPjxzdHJvbmc+0KLQtdC70LXRhNC+0L06PC9zdHJvbmc+ICR7b3JkZXJEYXRhLnBob25lIHx8ICfQndC1INGD0LrQsNC30LDQvdC+J308L3A+XG4gICAgICAgICAgICAgICAgPHA+PHN0cm9uZz7QlNCw0YLQsDo8L3N0cm9uZz4gJHtvcmRlckRhdGEub3JkZXJEYXRlIHx8ICfQndC1INGD0LrQsNC30LDQvdC+J308L3A+XG4gICAgICAgICAgICAgICAgPHA+PHN0cm9uZz7QktGA0LXQvNGPOjwvc3Ryb25nPiAke29yZGVyRGF0YS5vcmRlclRpbWUgfHwgJ9Cd0LUg0YPQutCw0LfQsNC90L4nfTwvcD5cbiAgICAgICAgICAgICAgICA8cD48c3Ryb25nPtCm0LXQvdCwOjwvc3Ryb25nPiAke29yZGVyRGF0YS50b3RhbFByaWNlIHx8IDB9IOKCvTwvcD5cbiAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgYCxcbiAgICAgICAgdGV4dDogYNCd0L7QstGL0Lkg0LfQsNC60LDQtyEg0KPRgdC70YPQs9CwOiAke29yZGVyRGF0YS5zZXJ2aWNlRGVzY3JpcHRpb259LCDQmtC70LjQtdC90YI6ICR7b3JkZXJEYXRhLmNsaWVudE5hbWV9LCDQptC10L3QsDogJHtvcmRlckRhdGEudG90YWxQcmljZX0g4oK9YFxuICAgICAgfSlcbiAgICB9XG5cbiAgICByZXR1cm4gYXdhaXQgdGhpcy5zZW5kRW1haWwoZXhlY3V0b3JFbWFpbCwge1xuICAgICAgc3ViamVjdDogJ/Cfjq8g0J3QvtCy0YvQuSDQt9Cw0LrQsNC3INC00LvRjyDQstCw0YEhJyxcbiAgICAgIGh0bWw6IGBcbiAgICAgICAgPGRpdiBzdHlsZT1cImZvbnQtZmFtaWx5OiBBcmlhbCwgc2Fucy1zZXJpZjsgbWF4LXdpZHRoOiA2MDBweDsgbWFyZ2luOiAwIGF1dG87XCI+XG4gICAgICAgICAgPGRpdiBzdHlsZT1cImJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCgxMzVkZWcsICM2NjdlZWEgMCUsICM3NjRiYTIgMTAwJSk7IHBhZGRpbmc6IDIwcHg7IHRleHQtYWxpZ246IGNlbnRlcjtcIj5cbiAgICAgICAgICAgIDxoMSBzdHlsZT1cImNvbG9yOiB3aGl0ZTsgbWFyZ2luOiAwO1wiPvCfjq8g0J3QvtCy0YvQuSDQt9Cw0LrQsNC3ITwvaDE+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgXG4gICAgICAgICAgPGRpdiBzdHlsZT1cInBhZGRpbmc6IDIwcHg7IGJhY2tncm91bmQ6ICNmOGY5ZmE7XCI+XG4gICAgICAgICAgICA8aDIgc3R5bGU9XCJjb2xvcjogIzMzMztcIj7QlNC10YLQsNC70Lgg0LfQsNC60LDQt9CwOjwvaDI+XG4gICAgICAgICAgICA8ZGl2IHN0eWxlPVwiYmFja2dyb3VuZDogd2hpdGU7IHBhZGRpbmc6IDE1cHg7IGJvcmRlci1yYWRpdXM6IDhweDsgbWFyZ2luOiAxMHB4IDA7XCI+XG4gICAgICAgICAgICAgIDxwPjxzdHJvbmc+0KPRgdC70YPQs9CwOjwvc3Ryb25nPiAke29yZGVyRGF0YS5zZXJ2aWNlRGVzY3JpcHRpb24gfHwgJ9Cd0LUg0YPQutCw0LfQsNC90L4nfTwvcD5cbiAgICAgICAgICAgICAgPHA+PHN0cm9uZz7QmtC70LjQtdC90YI6PC9zdHJvbmc+ICR7b3JkZXJEYXRhLmNsaWVudE5hbWUgfHwgJ9Cd0LUg0YPQutCw0LfQsNC90L4nfTwvcD5cbiAgICAgICAgICAgICAgPHA+PHN0cm9uZz7QkNC00YDQtdGBOjwvc3Ryb25nPiAke29yZGVyRGF0YS5hZGRyZXNzIHx8ICfQndC1INGD0LrQsNC30LDQvdC+J308L3A+XG4gICAgICAgICAgICAgIDxwPjxzdHJvbmc+0KLQtdC70LXRhNC+0L06PC9zdHJvbmc+ICR7b3JkZXJEYXRhLnBob25lIHx8ICfQndC1INGD0LrQsNC30LDQvdC+J308L3A+XG4gICAgICAgICAgICAgIDxwPjxzdHJvbmc+0JTQsNGC0LA6PC9zdHJvbmc+ICR7b3JkZXJEYXRhLm9yZGVyRGF0ZSB8fCAn0J3QtSDRg9C60LDQt9Cw0L3Qvid9PC9wPlxuICAgICAgICAgICAgICA8cD48c3Ryb25nPtCS0YDQtdC80Y86PC9zdHJvbmc+ICR7b3JkZXJEYXRhLm9yZGVyVGltZSB8fCAn0J3QtSDRg9C60LDQt9Cw0L3Qvid9PC9wPlxuICAgICAgICAgICAgICA8cD48c3Ryb25nPtCm0LXQvdCwOjwvc3Ryb25nPiAke29yZGVyRGF0YS50b3RhbFByaWNlIHx8IDB9IOKCvTwvcD5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L2Rpdj5cbiAgICAgIGAsXG4gICAgICB0ZXh0OiBg0J3QvtCy0YvQuSDQt9Cw0LrQsNC3ISDQo9GB0LvRg9Cz0LA6ICR7b3JkZXJEYXRhLnNlcnZpY2VEZXNjcmlwdGlvbn0sINCa0LvQuNC10L3RgjogJHtvcmRlckRhdGEuY2xpZW50TmFtZX0sINCm0LXQvdCwOiAke29yZGVyRGF0YS50b3RhbFByaWNlfSDigr1gXG4gICAgfSlcbiAgfVxuXG4gIC8vINCe0YLQv9GA0LDQstC60LAg0YPQstC10LTQvtC80LvQtdC90LjRjyDQviDQstGL0L/QvtC70L3QtdC90LjQuCDQt9Cw0LrQsNC30LAgKNC60LvQuNC10L3RgtGDKVxuICBhc3luYyBzZW5kT3JkZXJDb21wbGV0ZWROb3RpZmljYXRpb24oY2xpZW50RW1haWw6IHN0cmluZywgb3JkZXJEYXRhOiBhbnkpOiBQcm9taXNlPGJvb2xlYW4+IHtcbiAgICBpZiAodGhpcy5pc0RldmVsb3BtZW50KSB7XG4gICAgICByZXR1cm4gYXdhaXQgdGhpcy5zZW5kRW1haWwoY2xpZW50RW1haWwsIHtcbiAgICAgICAgc3ViamVjdDogJ+KchSDQktCw0Ygg0LfQsNC60LDQtyDQstGL0L/QvtC70L3QtdC9IScsXG4gICAgICAgIGh0bWw6IGBcbiAgICAgICAgICA8ZGl2IHN0eWxlPVwiZm9udC1mYW1pbHk6IEFyaWFsLCBzYW5zLXNlcmlmOyBtYXgtd2lkdGg6IDYwMHB4OyBtYXJnaW46IDAgYXV0bztcIj5cbiAgICAgICAgICAgIDxkaXYgc3R5bGU9XCJiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoMTM1ZGVnLCAjMjhhNzQ1IDAlLCAjMjBjOTk3IDEwMCUpOyBwYWRkaW5nOiAyMHB4OyB0ZXh0LWFsaWduOiBjZW50ZXI7XCI+XG4gICAgICAgICAgICAgIDxoMSBzdHlsZT1cImNvbG9yOiB3aGl0ZTsgbWFyZ2luOiAwO1wiPuKchSDQl9Cw0LrQsNC3INCy0YvQv9C+0LvQvdC10L0hPC9oMT5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgXG4gICAgICAgICAgICA8ZGl2IHN0eWxlPVwicGFkZGluZzogMjBweDsgYmFja2dyb3VuZDogI2Y4ZjlmYTtcIj5cbiAgICAgICAgICAgICAgPGgyIHN0eWxlPVwiY29sb3I6ICMzMzM7XCI+0JLQsNGIINC30LDQutCw0Lcg0YPRgdC/0LXRiNC90L4g0LLRi9C/0L7Qu9C90LXQvSE8L2gyPlxuICAgICAgICAgICAgICA8ZGl2IHN0eWxlPVwiYmFja2dyb3VuZDogd2hpdGU7IHBhZGRpbmc6IDE1cHg7IGJvcmRlci1yYWRpdXM6IDhweDsgbWFyZ2luOiAxMHB4IDA7XCI+XG4gICAgICAgICAgICAgICAgPHA+PHN0cm9uZz7Qo9GB0LvRg9Cz0LA6PC9zdHJvbmc+ICR7b3JkZXJEYXRhLnNlcnZpY2VEZXNjcmlwdGlvbiB8fCAn0J3QtSDRg9C60LDQt9Cw0L3Qvid9PC9wPlxuICAgICAgICAgICAgICAgIDxwPjxzdHJvbmc+0JjRgdC/0L7Qu9C90LjRgtC10LvRjDo8L3N0cm9uZz4gJHtvcmRlckRhdGEuZXhlY3V0b3JOYW1lIHx8ICfQndC1INGD0LrQsNC30LDQvdC+J308L3A+XG4gICAgICAgICAgICAgICAgPHA+PHN0cm9uZz7QlNCw0YLQsCDQstGL0L/QvtC70L3QtdC90LjRjzo8L3N0cm9uZz4gJHtuZXcgRGF0ZSgpLnRvTG9jYWxlRGF0ZVN0cmluZygncnUtUlUnKX08L3A+XG4gICAgICAgICAgICAgICAgPHA+PHN0cm9uZz7QodGD0LzQvNCwOjwvc3Ryb25nPiAke29yZGVyRGF0YS50b3RhbFByaWNlIHx8IDB9IOKCvTwvcD5cbiAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgYCxcbiAgICAgICAgdGV4dDogYNCX0LDQutCw0Lcg0LLRi9C/0L7Qu9C90LXQvSEg0KPRgdC70YPQs9CwOiAke29yZGVyRGF0YS5zZXJ2aWNlRGVzY3JpcHRpb259LCDQmNGB0L/QvtC70L3QuNGC0LXQu9GMOiAke29yZGVyRGF0YS5leGVjdXRvck5hbWV9LCDQodGD0LzQvNCwOiAke29yZGVyRGF0YS50b3RhbFByaWNlfSDigr1gXG4gICAgICB9KVxuICAgIH1cblxuICAgIHJldHVybiBhd2FpdCB0aGlzLnNlbmRFbWFpbChjbGllbnRFbWFpbCwge1xuICAgICAgc3ViamVjdDogJ+KchSDQktCw0Ygg0LfQsNC60LDQtyDQstGL0L/QvtC70L3QtdC9IScsXG4gICAgICBodG1sOiBgXG4gICAgICAgIDxkaXYgc3R5bGU9XCJmb250LWZhbWlseTogQXJpYWwsIHNhbnMtc2VyaWY7IG1heC13aWR0aDogNjAwcHg7IG1hcmdpbjogMCBhdXRvO1wiPlxuICAgICAgICAgIDxkaXYgc3R5bGU9XCJiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoMTM1ZGVnLCAjMjhhNzQ1IDAlLCAjMjBjOTk3IDEwMCUpOyBwYWRkaW5nOiAyMHB4OyB0ZXh0LWFsaWduOiBjZW50ZXI7XCI+XG4gICAgICAgICAgICA8aDEgc3R5bGU9XCJjb2xvcjogd2hpdGU7IG1hcmdpbjogMDtcIj7inIUg0JfQsNC60LDQtyDQstGL0L/QvtC70L3QtdC9ITwvaDE+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgXG4gICAgICAgICAgPGRpdiBzdHlsZT1cInBhZGRpbmc6IDIwcHg7IGJhY2tncm91bmQ6ICNmOGY5ZmE7XCI+XG4gICAgICAgICAgICA8aDIgc3R5bGU9XCJjb2xvcjogIzMzMztcIj7QktCw0Ygg0LfQsNC60LDQtyDRg9GB0L/QtdGI0L3QviDQstGL0L/QvtC70L3QtdC9ITwvaDI+XG4gICAgICAgICAgICA8ZGl2IHN0eWxlPVwiYmFja2dyb3VuZDogd2hpdGU7IHBhZGRpbmc6IDE1cHg7IGJvcmRlci1yYWRpdXM6IDhweDsgbWFyZ2luOiAxMHB4IDA7XCI+XG4gICAgICAgICAgICAgIDxwPjxzdHJvbmc+0KPRgdC70YPQs9CwOjwvc3Ryb25nPiAke29yZGVyRGF0YS5zZXJ2aWNlRGVzY3JpcHRpb24gfHwgJ9Cd0LUg0YPQutCw0LfQsNC90L4nfTwvcD5cbiAgICAgICAgICAgICAgPHA+PHN0cm9uZz7QmNGB0L/QvtC70L3QuNGC0LXQu9GMOjwvc3Ryb25nPiAke29yZGVyRGF0YS5leGVjdXRvck5hbWUgfHwgJ9Cd0LUg0YPQutCw0LfQsNC90L4nfTwvcD5cbiAgICAgICAgICAgICAgPHA+PHN0cm9uZz7QlNCw0YLQsCDQstGL0L/QvtC70L3QtdC90LjRjzo8L3N0cm9uZz4gJHtuZXcgRGF0ZSgpLnRvTG9jYWxlRGF0ZVN0cmluZygncnUtUlUnKX08L3A+XG4gICAgICAgICAgICAgIDxwPjxzdHJvbmc+0KHRg9C80LzQsDo8L3N0cm9uZz4gJHtvcmRlckRhdGEudG90YWxQcmljZSB8fCAwfSDigr08L3A+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgPC9kaXY+XG4gICAgICBgLFxuICAgICAgdGV4dDogYNCX0LDQutCw0Lcg0LLRi9C/0L7Qu9C90LXQvSEg0KPRgdC70YPQs9CwOiAke29yZGVyRGF0YS5zZXJ2aWNlRGVzY3JpcHRpb259LCDQmNGB0L/QvtC70L3QuNGC0LXQu9GMOiAke29yZGVyRGF0YS5leGVjdXRvck5hbWV9LCDQodGD0LzQvNCwOiAke29yZGVyRGF0YS50b3RhbFByaWNlfSDigr1gXG4gICAgfSlcbiAgfVxuXG4gIC8vINCe0YLQv9GA0LDQstC60LAg0YPQstC10LTQvtC80LvQtdC90LjRjyDQviDQv9C+0LLRi9GI0LXQvdC40Lgg0YPRgNC+0LLQvdGPXG4gIGFzeW5jIHNlbmRMZXZlbFVwTm90aWZpY2F0aW9uKHVzZXJFbWFpbDogc3RyaW5nLCBsZXZlbERhdGE6IGFueSk6IFByb21pc2U8Ym9vbGVhbj4ge1xuICAgIGlmICh0aGlzLmlzRGV2ZWxvcG1lbnQpIHtcbiAgICAgIHJldHVybiBhd2FpdCB0aGlzLnNlbmRFbWFpbCh1c2VyRW1haWwsIHtcbiAgICAgICAgc3ViamVjdDogYPCfjokg0J/QvtC30LTRgNCw0LLQu9GP0LXQvCEg0JLRiyDQtNC+0YHRgtC40LPQu9C4INGD0YDQvtCy0L3RjyAke2xldmVsRGF0YS5uZXdMZXZlbH0hYCxcbiAgICAgICAgaHRtbDogYFxuICAgICAgICAgIDxkaXYgc3R5bGU9XCJmb250LWZhbWlseTogQXJpYWwsIHNhbnMtc2VyaWY7IG1heC13aWR0aDogNjAwcHg7IG1hcmdpbjogMCBhdXRvO1wiPlxuICAgICAgICAgICAgPGRpdiBzdHlsZT1cImJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCgxMzVkZWcsICNmZmQ3MDAgMCUsICNmZmVkNGUgMTAwJSk7IHBhZGRpbmc6IDIwcHg7IHRleHQtYWxpZ246IGNlbnRlcjtcIj5cbiAgICAgICAgICAgICAgPGgxIHN0eWxlPVwiY29sb3I6ICMzMzM7IG1hcmdpbjogMDtcIj7wn46JINCf0L7Qt9C00YDQsNCy0LvRj9C10LwhPC9oMT5cbiAgICAgICAgICAgICAgPGgyIHN0eWxlPVwiY29sb3I6ICMzMzM7IG1hcmdpbjogMTBweCAwIDAgMDtcIj7QktGLINC00L7RgdGC0LjQs9C70Lgg0YPRgNC+0LLQvdGPICR7bGV2ZWxEYXRhLm5ld0xldmVsfSE8L2gyPlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIDxkaXYgc3R5bGU9XCJwYWRkaW5nOiAyMHB4OyBiYWNrZ3JvdW5kOiAjZjhmOWZhO1wiPlxuICAgICAgICAgICAgICA8ZGl2IHN0eWxlPVwiYmFja2dyb3VuZDogd2hpdGU7IHBhZGRpbmc6IDIwcHg7IGJvcmRlci1yYWRpdXM6IDhweDsgbWFyZ2luOiAxMHB4IDA7IHRleHQtYWxpZ246IGNlbnRlcjtcIj5cbiAgICAgICAgICAgICAgICA8ZGl2IHN0eWxlPVwiZm9udC1zaXplOiA0OHB4OyBtYXJnaW4tYm90dG9tOiAxNXB4O1wiPiR7bGV2ZWxEYXRhLmljb259PC9kaXY+XG4gICAgICAgICAgICAgICAgPGgzIHN0eWxlPVwiY29sb3I6ICMzMzM7IG1hcmdpbjogMDtcIj4ke2xldmVsRGF0YS50aXRsZX08L2gzPlxuICAgICAgICAgICAgICAgIDxwIHN0eWxlPVwiY29sb3I6ICM2NjY7IG1hcmdpbjogMTBweCAwO1wiPiR7bGV2ZWxEYXRhLmRlc2NyaXB0aW9uIHx8ICfQntGC0LvQuNGH0L3QsNGPINGA0LDQsdC+0YLQsCEnfTwvcD5cbiAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgYCxcbiAgICAgICAgdGV4dDogYNCf0L7Qt9C00YDQsNCy0LvRj9C10LwhINCS0Ysg0LTQvtGB0YLQuNCz0LvQuCDRg9GA0L7QstC90Y8gJHtsZXZlbERhdGEubmV3TGV2ZWx9IC0gJHtsZXZlbERhdGEudGl0bGV9IWBcbiAgICAgIH0pXG4gICAgfVxuXG4gICAgcmV0dXJuIGF3YWl0IHRoaXMuc2VuZEVtYWlsKHVzZXJFbWFpbCwge1xuICAgICAgc3ViamVjdDogYPCfjokg0J/QvtC30LTRgNCw0LLQu9GP0LXQvCEg0JLRiyDQtNC+0YHRgtC40LPQu9C4INGD0YDQvtCy0L3RjyAke2xldmVsRGF0YS5uZXdMZXZlbH0hYCxcbiAgICAgIGh0bWw6IGBcbiAgICAgICAgPGRpdiBzdHlsZT1cImZvbnQtZmFtaWx5OiBBcmlhbCwgc2Fucy1zZXJpZjsgbWF4LXdpZHRoOiA2MDBweDsgbWFyZ2luOiAwIGF1dG87XCI+XG4gICAgICAgICAgPGRpdiBzdHlsZT1cImJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCgxMzVkZWcsICNmZmQ3MDAgMCUsICNmZmVkNGUgMTAwJSk7IHBhZGRpbmc6IDIwcHg7IHRleHQtYWxpZ246IGNlbnRlcjtcIj5cbiAgICAgICAgICAgIDxoMSBzdHlsZT1cImNvbG9yOiAjMzMzOyBtYXJnaW46IDA7XCI+8J+OiSDQn9C+0LfQtNGA0LDQstC70Y/QtdC8ITwvaDE+XG4gICAgICAgICAgICA8aDIgc3R5bGU9XCJjb2xvcjogIzMzMzsgbWFyZ2luOiAxMHB4IDAgMCAwO1wiPtCS0Ysg0LTQvtGB0YLQuNCz0LvQuCDRg9GA0L7QstC90Y8gJHtsZXZlbERhdGEubmV3TGV2ZWx9ITwvaDI+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgXG4gICAgICAgICAgPGRpdiBzdHlsZT1cInBhZGRpbmc6IDIwcHg7IGJhY2tncm91bmQ6ICNmOGY5ZmE7XCI+XG4gICAgICAgICAgICA8ZGl2IHN0eWxlPVwiYmFja2dyb3VuZDogd2hpdGU7IHBhZGRpbmc6IDIwcHg7IGJvcmRlci1yYWRpdXM6IDhweDsgbWFyZ2luOiAxMHB4IDA7IHRleHQtYWxpZ246IGNlbnRlcjtcIj5cbiAgICAgICAgICAgICAgPGRpdiBzdHlsZT1cImZvbnQtc2l6ZTogNDhweDsgbWFyZ2luLWJvdHRvbTogMTVweDtcIj4ke2xldmVsRGF0YS5pY29ufTwvZGl2PlxuICAgICAgICAgICAgICA8aDMgc3R5bGU9XCJjb2xvcjogIzMzMzsgbWFyZ2luOiAwO1wiPiR7bGV2ZWxEYXRhLnRpdGxlfTwvaDM+XG4gICAgICAgICAgICAgIDxwIHN0eWxlPVwiY29sb3I6ICM2NjY7IG1hcmdpbjogMTBweCAwO1wiPiR7bGV2ZWxEYXRhLmRlc2NyaXB0aW9uIHx8ICfQntGC0LvQuNGH0L3QsNGPINGA0LDQsdC+0YLQsCEnfTwvcD5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L2Rpdj5cbiAgICAgIGAsXG4gICAgICB0ZXh0OiBg0J/QvtC30LTRgNCw0LLQu9GP0LXQvCEg0JLRiyDQtNC+0YHRgtC40LPQu9C4INGD0YDQvtCy0L3RjyAke2xldmVsRGF0YS5uZXdMZXZlbH0gLSAke2xldmVsRGF0YS50aXRsZX0hYFxuICAgIH0pXG4gIH1cblxuICAvLyDQntGC0L/RgNCw0LLQutCwINC90L7QstC+0YHRgtC90L7QuSDRgNCw0YHRgdGL0LvQutC4XG4gIGFzeW5jIHNlbmROZXdzbGV0dGVyKGVtYWlsczogc3RyaW5nW10sIG5ld3NsZXR0ZXJEYXRhOiBhbnkpOiBQcm9taXNlPHsgc3VjY2VzczogbnVtYmVyOyBmYWlsZWQ6IG51bWJlciB9PiB7XG4gICAgaWYgKHRoaXMuaXNEZXZlbG9wbWVudCkge1xuICAgICAgbGV0IHN1Y2Nlc3MgPSAwXG4gICAgICBsZXQgZmFpbGVkID0gMFxuXG4gICAgICBmb3IgKGNvbnN0IGVtYWlsIG9mIGVtYWlscykge1xuICAgICAgICBjb25zdCByZXN1bHQgPSBhd2FpdCB0aGlzLnNlbmRFbWFpbChlbWFpbCwge1xuICAgICAgICAgIHN1YmplY3Q6IG5ld3NsZXR0ZXJEYXRhLnN1YmplY3QsXG4gICAgICAgICAgaHRtbDogYFxuICAgICAgICAgICAgPGRpdiBzdHlsZT1cImZvbnQtZmFtaWx5OiBBcmlhbCwgc2Fucy1zZXJpZjsgbWF4LXdpZHRoOiA2MDBweDsgbWFyZ2luOiAwIGF1dG87XCI+XG4gICAgICAgICAgICAgIDxkaXYgc3R5bGU9XCJiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoMTM1ZGVnLCAjNjY3ZWVhIDAlLCAjNzY0YmEyIDEwMCUpOyBwYWRkaW5nOiAyMHB4OyB0ZXh0LWFsaWduOiBjZW50ZXI7XCI+XG4gICAgICAgICAgICAgICAgPGgxIHN0eWxlPVwiY29sb3I6IHdoaXRlOyBtYXJnaW46IDA7XCI+8J+ToiAke25ld3NsZXR0ZXJEYXRhLnN1YmplY3R9PC9oMT5cbiAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgIFxuICAgICAgICAgICAgICA8ZGl2IHN0eWxlPVwicGFkZGluZzogMjBweDsgYmFja2dyb3VuZDogI2Y4ZjlmYTtcIj5cbiAgICAgICAgICAgICAgICA8ZGl2IHN0eWxlPVwiYmFja2dyb3VuZDogd2hpdGU7IHBhZGRpbmc6IDIwcHg7IGJvcmRlci1yYWRpdXM6IDhweDsgbWFyZ2luOiAxMHB4IDA7XCI+XG4gICAgICAgICAgICAgICAgICAke25ld3NsZXR0ZXJEYXRhLmNvbnRlbnR9XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgYCxcbiAgICAgICAgICB0ZXh0OiBuZXdzbGV0dGVyRGF0YS50ZXh0Q29udGVudCB8fCBuZXdzbGV0dGVyRGF0YS5zdWJqZWN0XG4gICAgICAgIH0pXG4gICAgICAgIFxuICAgICAgICBpZiAocmVzdWx0KSB7XG4gICAgICAgICAgc3VjY2VzcysrXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgZmFpbGVkKytcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICByZXR1cm4geyBzdWNjZXNzLCBmYWlsZWQgfVxuICAgIH1cblxuICAgIGxldCBzdWNjZXNzID0gMFxuICAgIGxldCBmYWlsZWQgPSAwXG5cbiAgICBmb3IgKGNvbnN0IGVtYWlsIG9mIGVtYWlscykge1xuICAgICAgY29uc3QgcmVzdWx0ID0gYXdhaXQgdGhpcy5zZW5kRW1haWwoZW1haWwsIHtcbiAgICAgICAgc3ViamVjdDogbmV3c2xldHRlckRhdGEuc3ViamVjdCxcbiAgICAgICAgaHRtbDogYFxuICAgICAgICAgIDxkaXYgc3R5bGU9XCJmb250LWZhbWlseTogQXJpYWwsIHNhbnMtc2VyaWY7IG1heC13aWR0aDogNjAwcHg7IG1hcmdpbjogMCBhdXRvO1wiPlxuICAgICAgICAgICAgPGRpdiBzdHlsZT1cImJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCgxMzVkZWcsICM2NjdlZWEgMCUsICM3NjRiYTIgMTAwJSk7IHBhZGRpbmc6IDIwcHg7IHRleHQtYWxpZ246IGNlbnRlcjtcIj5cbiAgICAgICAgICAgICAgPGgxIHN0eWxlPVwiY29sb3I6IHdoaXRlOyBtYXJnaW46IDA7XCI+8J+ToiAke25ld3NsZXR0ZXJEYXRhLnN1YmplY3R9PC9oMT5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgXG4gICAgICAgICAgICA8ZGl2IHN0eWxlPVwicGFkZGluZzogMjBweDsgYmFja2dyb3VuZDogI2Y4ZjlmYTtcIj5cbiAgICAgICAgICAgICAgPGRpdiBzdHlsZT1cImJhY2tncm91bmQ6IHdoaXRlOyBwYWRkaW5nOiAyMHB4OyBib3JkZXItcmFkaXVzOiA4cHg7IG1hcmdpbjogMTBweCAwO1wiPlxuICAgICAgICAgICAgICAgICR7bmV3c2xldHRlckRhdGEuY29udGVudH1cbiAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgYCxcbiAgICAgICAgdGV4dDogbmV3c2xldHRlckRhdGEudGV4dENvbnRlbnQgfHwgbmV3c2xldHRlckRhdGEuc3ViamVjdFxuICAgICAgfSlcbiAgICAgIFxuICAgICAgaWYgKHJlc3VsdCkge1xuICAgICAgICBzdWNjZXNzKytcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGZhaWxlZCsrXG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIHsgc3VjY2VzcywgZmFpbGVkIH1cbiAgfVxufVxuXG5leHBvcnQgY29uc3QgZW1haWxTZXJ2aWNlID0gbmV3IEVtYWlsU2VydmljZSgpXG4iXSwibmFtZXMiOlsibm9kZW1haWxlciIsIkVtYWlsU2VydmljZSIsImNvbnN0cnVjdG9yIiwiaW5pdGlhbGl6ZSIsImlzRGV2ZWxvcG1lbnQiLCJwcm9jZXNzIiwiZW52IiwiRU1BSUxfSE9TVCIsIkVNQUlMX1VTRVIiLCJFTUFJTF9QQVNTIiwiY29uc29sZSIsImxvZyIsInRyYW5zcG9ydGVyIiwiY3JlYXRlVHJhbnNwb3J0Iiwic3RyZWFtVHJhbnNwb3J0IiwibmV3bGluZSIsImJ1ZmZlciIsImhvc3QiLCJwb3J0Iiwic2VjdXJlIiwiYXV0aCIsInVzZXIiLCJwYXNzIiwidGxzIiwicmVqZWN0VW5hdXRob3JpemVkIiwicmVpbml0aWFsaXplIiwidmVyaWZ5Q29ubmVjdGlvbiIsInZlcmlmeSIsImVycm9yIiwic2VuZEVtYWlsIiwidG8iLCJ0ZW1wbGF0ZSIsInN1YmplY3QiLCJodG1sIiwic3Vic3RyaW5nIiwibWFpbE9wdGlvbnMiLCJmcm9tIiwidGV4dCIsInNlbmRNYWlsIiwic2VuZE5ld09yZGVyTm90aWZpY2F0aW9uIiwiZXhlY3V0b3JFbWFpbCIsIm9yZGVyRGF0YSIsInNlcnZpY2VEZXNjcmlwdGlvbiIsImNsaWVudE5hbWUiLCJhZGRyZXNzIiwicGhvbmUiLCJvcmRlckRhdGUiLCJvcmRlclRpbWUiLCJ0b3RhbFByaWNlIiwic2VuZE9yZGVyQ29tcGxldGVkTm90aWZpY2F0aW9uIiwiY2xpZW50RW1haWwiLCJleGVjdXRvck5hbWUiLCJEYXRlIiwidG9Mb2NhbGVEYXRlU3RyaW5nIiwic2VuZExldmVsVXBOb3RpZmljYXRpb24iLCJ1c2VyRW1haWwiLCJsZXZlbERhdGEiLCJuZXdMZXZlbCIsImljb24iLCJ0aXRsZSIsImRlc2NyaXB0aW9uIiwic2VuZE5ld3NsZXR0ZXIiLCJlbWFpbHMiLCJuZXdzbGV0dGVyRGF0YSIsInN1Y2Nlc3MiLCJmYWlsZWQiLCJlbWFpbCIsInJlc3VsdCIsImNvbnRlbnQiLCJ0ZXh0Q29udGVudCIsImVtYWlsU2VydmljZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./lib/email/emailService.ts\n");

/***/ }),

/***/ "(rsc)/./lib/gamification/constants.ts":
/*!***************************************!*\
  !*** ./lib/gamification/constants.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ACHIEVEMENTS: () => (/* binding */ ACHIEVEMENTS),\n/* harmony export */   CLIENT_ACHIEVEMENTS: () => (/* binding */ CLIENT_ACHIEVEMENTS),\n/* harmony export */   CLIENT_LEVELS: () => (/* binding */ CLIENT_LEVELS),\n/* harmony export */   EXECUTOR_ACHIEVEMENTS: () => (/* binding */ EXECUTOR_ACHIEVEMENTS),\n/* harmony export */   EXECUTOR_LEVELS: () => (/* binding */ EXECUTOR_LEVELS),\n/* harmony export */   LEVELS: () => (/* binding */ LEVELS),\n/* harmony export */   RARITY_COLORS: () => (/* binding */ RARITY_COLORS),\n/* harmony export */   RARITY_ICONS: () => (/* binding */ RARITY_ICONS),\n/* harmony export */   XP_REWARDS: () => (/* binding */ XP_REWARDS)\n/* harmony export */ });\n// Константы для системы геймификации\n// Конфигурация уровней для клиентов\nconst CLIENT_LEVELS = [\n    {\n        level: 1,\n        title: \"Новичок\",\n        description: \"Добро пожаловать в ProDoAgency!\",\n        icon: \"\\uD83C\\uDF31\",\n        xpRequired: 0,\n        benefits: [\n            \"Базовые функции\",\n            \"Поиск мастеров\",\n            \"Создание заказов\"\n        ],\n        color: \"#6B7280\"\n    },\n    {\n        level: 2,\n        title: \"Активный клиент\",\n        description: \"Вы активно используете платформу\",\n        icon: \"⚡\",\n        xpRequired: 100,\n        benefits: [\n            \"Приоритет в поиске (+20%)\",\n            \"Быстрая поддержка\",\n            \"Уведомления о новых мастерах\",\n            \"Доступ к статистике\"\n        ],\n        color: \"#3B82F6\"\n    },\n    {\n        level: 3,\n        title: \"Постоянный клиент\",\n        description: \"Вы стали постоянным пользователем\",\n        icon: \"⭐\",\n        xpRequired: 300,\n        benefits: [\n            \"VIP поддержка\",\n            \"Эксклюзивные предложения\",\n            \"Приоритет в поиске (+40%)\",\n            \"Ранний доступ к новым функциям\",\n            \"Расширенная аналитика\"\n        ],\n        color: \"#10B981\"\n    },\n    {\n        level: 4,\n        title: \"VIP клиент\",\n        description: \"Вы VIP клиент платформы\",\n        icon: \"\\uD83D\\uDC51\",\n        xpRequired: 600,\n        benefits: [\n            \"Персональный менеджер\",\n            \"Эксклюзивные мастера\",\n            \"Приоритет в поиске (+60%)\",\n            \"Бета-тестирование функций\",\n            \"Приоритетная поддержка\"\n        ],\n        color: \"#8B5CF6\"\n    },\n    {\n        level: 5,\n        title: \"Амбассадор\",\n        description: \"Вы амбассадор платформы!\",\n        icon: \"\\uD83C\\uDFC6\",\n        xpRequired: 1000,\n        benefits: [\n            \"Все привилегии\",\n            \"Участие в программе развития\",\n            \"Эксклюзивные акции\",\n            \"Статус бета-тестера\",\n            \"Влияние на развитие платформы\"\n        ],\n        color: \"#F59E0B\"\n    }\n];\n// Конфигурация уровней для исполнителей\nconst EXECUTOR_LEVELS = [\n    {\n        level: 1,\n        title: \"Новичок\",\n        description: \"Добро пожаловать в ProDoAgency!\",\n        icon: \"\\uD83C\\uDF31\",\n        xpRequired: 0,\n        benefits: [\n            \"Базовые функции\",\n            \"Создание профиля\",\n            \"Просмотр заказов\"\n        ],\n        color: \"#6B7280\"\n    },\n    {\n        level: 2,\n        title: \"Активный мастер\",\n        description: \"Вы активно работаете на платформе\",\n        icon: \"⚡\",\n        xpRequired: 200,\n        benefits: [\n            \"Приоритет в поиске (+30%)\",\n            \"Быстрая верификация\",\n            \"Уведомления о новых заказах\",\n            \"Базовая аналитика\"\n        ],\n        color: \"#3B82F6\"\n    },\n    {\n        level: 3,\n        title: \"Профессионал\",\n        description: \"Вы стали профессионалом\",\n        icon: \"⭐\",\n        xpRequired: 500,\n        benefits: [\n            \"VIP поддержка\",\n            \"Эксклюзивные заказы\",\n            \"Приоритет в поиске (+50%)\",\n            \"Расширенная аналитика\",\n            \"Приоритетные уведомления\"\n        ],\n        color: \"#10B981\"\n    },\n    {\n        level: 4,\n        title: \"Мастер\",\n        description: \"Вы мастер своего дела\",\n        icon: \"\\uD83D\\uDC51\",\n        xpRequired: 1000,\n        benefits: [\n            \"Персональный менеджер\",\n            \"Премиум заказы\",\n            \"Приоритет в поиске (+70%)\",\n            \"Полная аналитика\",\n            \"Эксклюзивные возможности\"\n        ],\n        color: \"#8B5CF6\"\n    },\n    {\n        level: 5,\n        title: \"Эксперт\",\n        description: \"Вы эксперт платформы!\",\n        icon: \"\\uD83C\\uDFC6\",\n        xpRequired: 2000,\n        benefits: [\n            \"Все привилегии\",\n            \"Участие в программе развития\",\n            \"Эксклюзивные возможности\",\n            \"Статус партнера\",\n            \"Влияние на развитие платформы\"\n        ],\n        color: \"#F59E0B\"\n    }\n];\n// Универсальные уровни (для обратной совместимости)\nconst LEVELS = CLIENT_LEVELS;\n// Достижения для клиентов\nconst CLIENT_ACHIEVEMENTS = [\n    // Мотивация к активности\n    {\n        id: \"1\",\n        title: \"Первый поиск\",\n        description: \"Найдите своего первого мастера\",\n        icon: \"\\uD83D\\uDD0D\",\n        xpReward: 50,\n        category: \"activity\",\n        rarity: \"common\",\n        condition: (user)=>user.searchCount >= 1\n    },\n    {\n        id: \"2\",\n        title: \"Критик\",\n        description: \"Оставьте 10 отзывов\",\n        icon: \"⭐\",\n        xpReward: 100,\n        category: \"reviews\",\n        rarity: \"common\",\n        condition: (user)=>user.reviewsCount >= 10\n    },\n    {\n        id: \"3\",\n        title: \"Исследователь\",\n        description: \"Просмотрите 50 профилей мастеров\",\n        icon: \"\\uD83D\\uDD0D\",\n        xpReward: 150,\n        category: \"activity\",\n        rarity: \"rare\",\n        condition: (user)=>user.profilesViewed >= 50\n    },\n    {\n        id: \"4\",\n        title: \"Верный клиент\",\n        description: \"Используйте платформу 3 месяца\",\n        icon: \"\\uD83D\\uDC8E\",\n        xpReward: 200,\n        category: \"activity\",\n        rarity: \"rare\",\n        condition: (user)=>user.monthsActive >= 3\n    },\n    {\n        id: \"5\",\n        title: \"Друг платформы\",\n        description: \"Пригласите 5 друзей\",\n        icon: \"\\uD83D\\uDC65\",\n        xpReward: 300,\n        category: \"referrals\",\n        rarity: \"rare\",\n        condition: (user)=>user.referralCount >= 5\n    },\n    {\n        id: \"6\",\n        title: \"Амбассадор\",\n        description: \"Пригласите 20 друзей\",\n        icon: \"\\uD83C\\uDF96️\",\n        xpReward: 1000,\n        category: \"referrals\",\n        rarity: \"legendary\",\n        condition: (user)=>user.referralCount >= 20\n    }\n];\n// Достижения для исполнителей\nconst EXECUTOR_ACHIEVEMENTS = [\n    // Мотивация к подписке\n    {\n        id: \"1\",\n        title: \"Первая подписка\",\n        description: \"Оформите первую подписку\",\n        icon: \"\\uD83D\\uDCB3\",\n        xpReward: 200,\n        category: \"activity\",\n        rarity: \"common\",\n        condition: (user)=>user.hasActiveSubscription\n    },\n    {\n        id: \"2\",\n        title: \"Качественная работа\",\n        description: \"Получите 20 отзывов на 5 звезд\",\n        icon: \"\\uD83C\\uDF1F\",\n        xpReward: 300,\n        category: \"reviews\",\n        rarity: \"rare\",\n        condition: (user)=>user.fiveStarReviews >= 20\n    },\n    {\n        id: \"3\",\n        title: \"Активный мастер\",\n        description: \"Выполните 30 заказов за месяц\",\n        icon: \"⚡\",\n        xpReward: 400,\n        category: \"orders\",\n        rarity: \"rare\",\n        condition: (user)=>user.monthlyOrders >= 30\n    },\n    {\n        id: \"4\",\n        title: \"Скоростной демон\",\n        description: \"Отвечайте на заказы за 5 минут\",\n        icon: \"\\uD83D\\uDE80\",\n        xpReward: 150,\n        category: \"orders\",\n        rarity: \"common\",\n        condition: (user)=>user.averageResponseTime <= 5\n    },\n    {\n        id: \"5\",\n        title: \"Магнит коллег\",\n        description: \"Пригласите 3 исполнителей\",\n        icon: \"\\uD83E\\uDDF2\",\n        xpReward: 500,\n        category: \"referrals\",\n        rarity: \"rare\",\n        condition: (user)=>user.referralCount >= 3\n    },\n    {\n        id: \"6\",\n        title: \"Верный мастер\",\n        description: \"Работайте на платформе 6 месяцев\",\n        icon: \"\\uD83D\\uDC8E\",\n        xpReward: 1000,\n        category: \"activity\",\n        rarity: \"epic\",\n        condition: (user)=>user.monthsActive >= 6\n    },\n    {\n        id: \"7\",\n        title: \"Неуязвимый\",\n        description: \"Завершите 100 заказов подряд без отмен\",\n        icon: \"\\uD83D\\uDEE1️\",\n        xpReward: 1500,\n        category: \"orders\",\n        rarity: \"legendary\",\n        condition: (user)=>user.consecutiveOrders >= 100\n    }\n];\n// Универсальные достижения (для обратной совместимости)\nconst ACHIEVEMENTS = CLIENT_ACHIEVEMENTS;\n// XP за различные действия\nconst XP_REWARDS = {\n    // Клиенты - активность\n    DAILY_LOGIN: 2,\n    SEARCH_MASTER: 5,\n    VIEW_PROFILE: 1,\n    LEAVE_REVIEW: 10,\n    SHARE_SOCIAL: 3,\n    UPDATE_PROFILE: 5,\n    // Клиенты - рефералы\n    REFERRAL_REGISTRATION: 100,\n    REFERRAL_FIRST_SEARCH: 50,\n    REFERRAL_5_SEARCHES: 100,\n    REFERRAL_20_SEARCHES: 200,\n    // Исполнители - подписки (ГЛАВНАЯ МОТИВАЦИЯ!)\n    FIRST_SUBSCRIPTION: 200,\n    MONTHLY_SUBSCRIPTION: 100,\n    YEARLY_SUBSCRIPTION: 500,\n    SUBSCRIPTION_RENEWAL: 150,\n    // Исполнители - качество\n    GET_5_STAR_REVIEW: 25,\n    GET_4_STAR_REVIEW: 15,\n    GET_3_STAR_REVIEW: 5,\n    COMPLETE_ORDER: 15,\n    RESPOND_5_MIN: 8,\n    RESPOND_1_MIN: 15,\n    // Исполнители - активность\n    EXECUTOR_DAILY_LOGIN: 2,\n    EXECUTOR_UPDATE_PROFILE: 5,\n    UPLOAD_PHOTO: 3,\n    COMPLETE_FAST: 5,\n    // Рефералы исполнителей\n    REFERRAL_EXECUTOR_REGISTRATION: 200,\n    REFERRAL_EXECUTOR_SUBSCRIPTION: 300,\n    REFERRAL_EXECUTOR_5_ORDERS: 100,\n    // Достижения\n    ACHIEVEMENT_COMMON: 0,\n    ACHIEVEMENT_RARE: 25,\n    ACHIEVEMENT_EPIC: 50,\n    ACHIEVEMENT_LEGENDARY: 100\n};\n// Цвета для редкости достижений\nconst RARITY_COLORS = {\n    common: \"#6B7280\",\n    rare: \"#3B82F6\",\n    epic: \"#8B5CF6\",\n    legendary: \"#F59E0B\"\n};\n// Иконки для редкости\nconst RARITY_ICONS = {\n    common: \"⚪\",\n    rare: \"\\uD83D\\uDD35\",\n    epic: \"\\uD83D\\uDFE3\",\n    legendary: \"\\uD83D\\uDFE0\"\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./lib/gamification/constants.ts\n");

/***/ }),

/***/ "(rsc)/./lib/gamification/gamificationService.ts":
/*!*************************************************!*\
  !*** ./lib/gamification/gamificationService.ts ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GamificationService: () => (/* binding */ GamificationService),\n/* harmony export */   gamificationService: () => (/* binding */ gamificationService)\n/* harmony export */ });\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @prisma/client */ \"@prisma/client\");\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_prisma_client__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./constants */ \"(rsc)/./lib/gamification/constants.ts\");\n/* harmony import */ var _notificationService__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./notificationService */ \"(rsc)/./lib/gamification/notificationService.ts\");\n\n\n\nconst prisma = new _prisma_client__WEBPACK_IMPORTED_MODULE_0__.PrismaClient();\nconst notificationService = new _notificationService__WEBPACK_IMPORTED_MODULE_2__.NotificationService();\nclass GamificationService {\n    // Получение текущего уровня пользователя\n    async getUserLevel(userId) {\n        const user = await prisma.user.findUnique({\n            where: {\n                id: userId\n            },\n            select: {\n                experiencePoints: true,\n                currentLevel: true,\n                role: true\n            }\n        });\n        if (!user) {\n            throw new Error(\"Пользователь не найден\");\n        }\n        // Выбираем уровни в зависимости от роли\n        const levels = user.role === \"executor\" ? _constants__WEBPACK_IMPORTED_MODULE_1__.EXECUTOR_LEVELS : _constants__WEBPACK_IMPORTED_MODULE_1__.CLIENT_LEVELS;\n        const levelConfig = levels.find((l)=>l.level === user.currentLevel) || levels[0];\n        return {\n            level: levelConfig.level,\n            title: levelConfig.title,\n            icon: levelConfig.icon,\n            color: levelConfig.color\n        };\n    }\n    // Добавление XP пользователю\n    async addXp(userId, reward) {\n        const user = await prisma.user.findUnique({\n            where: {\n                id: userId\n            },\n            select: {\n                experiencePoints: true,\n                currentLevel: true,\n                totalXpEarned: true,\n                dailyXpEarned: true,\n                weeklyXpEarned: true,\n                monthlyXpEarned: true\n            }\n        });\n        if (!user) {\n            throw new Error(\"Пользователь не найден\");\n        }\n        const newXp = user.experiencePoints + reward.amount;\n        const newTotalXp = user.totalXpEarned + reward.amount;\n        // Обновляем статистику\n        const now = new Date();\n        const isNewDay = !user.dailyXpEarned || this.isNewDay(now);\n        const isNewWeek = !user.weeklyXpEarned || this.isNewWeek(now);\n        const isNewMonth = !user.monthlyXpEarned || this.isNewMonth(now);\n        const updateData = {\n            experiencePoints: newXp,\n            totalXpEarned: newTotalXp,\n            lastXpEarned: now,\n            dailyXpEarned: isNewDay ? reward.amount : user.dailyXpEarned + reward.amount,\n            weeklyXpEarned: isNewWeek ? reward.amount : user.weeklyXpEarned + reward.amount,\n            monthlyXpEarned: isNewMonth ? reward.amount : user.monthlyXpEarned + reward.amount\n        };\n        // Проверяем повышение уровня\n        const newLevel = this.calculateLevel(newXp, user.role);\n        let levelUp = null;\n        if (newLevel > user.currentLevel) {\n            updateData.currentLevel = newLevel;\n            const levels = user.role === \"executor\" ? _constants__WEBPACK_IMPORTED_MODULE_1__.EXECUTOR_LEVELS : _constants__WEBPACK_IMPORTED_MODULE_1__.CLIENT_LEVELS;\n            levelUp = {\n                oldLevel: user.currentLevel,\n                newLevel: newLevel,\n                levelConfig: levels.find((l)=>l.level === newLevel)\n            };\n            // Отправляем уведомление о повышении уровня\n            if (levelUp.levelConfig) {\n                await notificationService.notifyLevelUp(userId, user.currentLevel, newLevel, levelUp.levelConfig);\n            }\n        } else {\n            // Даже если уровень не повысился, обновляем currentLevel для синхронизации\n            updateData.currentLevel = newLevel;\n        }\n        // Сохраняем изменения\n        await prisma.user.update({\n            where: {\n                id: userId\n            },\n            data: updateData\n        });\n        // Записываем в историю XP\n        await prisma.xpHistory.create({\n            data: {\n                userId: userId,\n                xpAmount: reward.amount,\n                source: reward.source,\n                description: reward.description,\n                metadata: reward.metadata\n            }\n        });\n        // Проверяем достижения\n        await this.checkAchievements(userId);\n        return {\n            newLevel: !!levelUp,\n            levelUp\n        };\n    }\n    // Проверка и выдача достижений\n    async checkAchievements(userId) {\n        const user = await this.getUserWithStats(userId);\n        const newAchievements = [];\n        // Выбираем достижения в зависимости от роли\n        const achievements = user.role === \"executor\" ? _constants__WEBPACK_IMPORTED_MODULE_1__.EXECUTOR_ACHIEVEMENTS : _constants__WEBPACK_IMPORTED_MODULE_1__.CLIENT_ACHIEVEMENTS;\n        for (const achievement of achievements){\n            // Проверяем, есть ли уже это достижение у пользователя\n            const existingAchievement = await prisma.userAchievement.findUnique({\n                where: {\n                    userId_achievementId: {\n                        userId: userId,\n                        achievementId: parseInt(achievement.id)\n                    }\n                }\n            });\n            if (existingAchievement) continue;\n            // Проверяем условие достижения\n            if (achievement.condition(user)) {\n                // Выдаем достижение\n                await prisma.userAchievement.create({\n                    data: {\n                        userId: userId,\n                        achievementId: parseInt(achievement.id),\n                        xpEarned: achievement.xpReward\n                    }\n                });\n                // Добавляем XP за достижение\n                if (achievement.xpReward > 0) {\n                    await this.addXp(userId, {\n                        amount: achievement.xpReward,\n                        source: \"achievement\",\n                        description: `Достижение: ${achievement.title}`,\n                        metadata: {\n                            achievementId: achievement.id\n                        }\n                    });\n                }\n                // Отправляем уведомление о достижении\n                await notificationService.notifyAchievement(userId, achievement);\n                newAchievements.push({\n                    id: achievement.id,\n                    title: achievement.title,\n                    description: achievement.description,\n                    icon: achievement.icon,\n                    rarity: achievement.rarity,\n                    xpReward: achievement.xpReward\n                });\n            }\n        }\n        return newAchievements;\n    }\n    // Получение достижений пользователя\n    async getUserAchievements(userId) {\n        const achievements = await prisma.userAchievement.findMany({\n            where: {\n                userId\n            },\n            include: {\n                achievement: true\n            },\n            orderBy: {\n                earnedAt: \"desc\"\n            }\n        });\n        return achievements.map((ua)=>({\n                id: ua.achievement.id,\n                title: ua.achievement.title,\n                description: ua.achievement.description,\n                icon: ua.achievement.icon,\n                rarity: ua.achievement.rarity,\n                xpReward: ua.xpEarned,\n                earnedAt: ua.earnedAt,\n                isNotified: ua.isNotified\n            }));\n    }\n    // Получение истории XP\n    async getXpHistory(userId, limit = 50) {\n        const history = await prisma.xpHistory.findMany({\n            where: {\n                userId\n            },\n            orderBy: {\n                earnedAt: \"desc\"\n            },\n            take: limit\n        });\n        return history.map((entry)=>({\n                id: entry.id,\n                xpAmount: entry.xpAmount,\n                source: entry.source,\n                description: entry.description,\n                metadata: entry.metadata,\n                earnedAt: entry.earnedAt\n            }));\n    }\n    // Получение статистики пользователя\n    async getUserStats(userId) {\n        const user = await this.getUserWithStats(userId);\n        const level = await this.getUserLevel(userId);\n        const achievements = await this.getUserAchievements(userId);\n        const xpHistory = await this.getXpHistory(userId, 10);\n        return {\n            user: {\n                id: user.id,\n                name: user.name,\n                email: user.email,\n                role: user.role\n            },\n            level,\n            xp: {\n                current: user.experiencePoints,\n                total: user.totalXpEarned,\n                daily: user.dailyXpEarned,\n                weekly: user.weeklyXpEarned,\n                monthly: user.monthlyXpEarned\n            },\n            achievements: {\n                total: achievements.length,\n                recent: achievements.slice(0, 5),\n                byRarity: this.groupAchievementsByRarity(achievements)\n            },\n            xpHistory: xpHistory.slice(0, 10),\n            nextLevel: this.getNextLevelInfo(user.experiencePoints, user.role)\n        };\n    }\n    // Создание реферального кода\n    async createReferralCode(userId) {\n        const code = this.generateReferralCode();\n        await prisma.user.update({\n            where: {\n                id: userId\n            },\n            data: {\n                referralCode: code\n            }\n        });\n        return code;\n    }\n    // Обработка реферала\n    async processReferral(referralCode, newUserId) {\n        const referrer = await prisma.user.findUnique({\n            where: {\n                referralCode\n            }\n        });\n        if (!referrer) {\n            throw new Error(\"Неверный реферальный код\");\n        }\n        // Обновляем данные нового пользователя\n        await prisma.user.update({\n            where: {\n                id: newUserId\n            },\n            data: {\n                referredBy: referrer.id\n            }\n        });\n        // Обновляем счетчик рефералов\n        await prisma.user.update({\n            where: {\n                id: referrer.id\n            },\n            data: {\n                referralCount: {\n                    increment: 1\n                }\n            }\n        });\n        // Выдаем награды\n        const referrerReward = await this.addXp(referrer.id, {\n            amount: _constants__WEBPACK_IMPORTED_MODULE_1__.XP_REWARDS.REFERRAL_REGISTRATION,\n            source: \"referral\",\n            description: \"Приглашение друга\",\n            metadata: {\n                referredUserId: newUserId\n            }\n        });\n        const newUserReward = await this.addXp(newUserId, {\n            amount: 50,\n            source: \"referral_bonus\",\n            description: \"Бонус за регистрацию по приглашению\",\n            metadata: {\n                referrerId: referrer.id\n            }\n        });\n        return {\n            referrerReward,\n            newUserReward,\n            referrer: {\n                id: referrer.id,\n                name: referrer.name\n            }\n        };\n    }\n    // Вспомогательные методы\n    calculateLevel(xp, role) {\n        const levels = role === \"executor\" ? _constants__WEBPACK_IMPORTED_MODULE_1__.EXECUTOR_LEVELS : _constants__WEBPACK_IMPORTED_MODULE_1__.CLIENT_LEVELS;\n        for(let i = levels.length - 1; i >= 0; i--){\n            if (xp >= levels[i].xpRequired) {\n                return levels[i].level;\n            }\n        }\n        return 1;\n    }\n    getNextLevelInfo(currentXp, role) {\n        const levels = role === \"executor\" ? _constants__WEBPACK_IMPORTED_MODULE_1__.EXECUTOR_LEVELS : _constants__WEBPACK_IMPORTED_MODULE_1__.CLIENT_LEVELS;\n        const currentLevel = this.calculateLevel(currentXp, role);\n        const nextLevel = levels.find((l)=>l.level === currentLevel + 1);\n        if (!nextLevel) {\n            return null // Максимальный уровень\n            ;\n        }\n        const xpNeeded = nextLevel.xpRequired - currentXp;\n        const progress = (currentXp - levels[currentLevel - 1].xpRequired) / (nextLevel.xpRequired - levels[currentLevel - 1].xpRequired) * 100;\n        return {\n            level: nextLevel.level,\n            title: nextLevel.title,\n            icon: nextLevel.icon,\n            xpNeeded,\n            progress: Math.round(progress)\n        };\n    }\n    async getUserWithStats(userId) {\n        const user = await prisma.user.findUnique({\n            where: {\n                id: userId\n            },\n            include: {\n                clientOrders: true,\n                executorOrders: true,\n                clientReviews: true,\n                executorReviews: true,\n                achievements: {\n                    include: {\n                        achievement: true\n                    }\n                }\n            }\n        });\n        if (!user) {\n            throw new Error(\"Пользователь не найден\");\n        }\n        // Вычисляем статистику\n        const ordersCount = user.role === \"client\" ? user.clientOrders.length : user.executorOrders.length;\n        const reviewsCount = user.role === \"client\" ? user.clientReviews.length : user.executorReviews.length;\n        // Вычисляем рейтинг\n        let rating = 0;\n        if (user.role === \"executor\" && user.executorReviews.length > 0) {\n            const totalRating = user.executorReviews.reduce((sum, review)=>sum + review.rating, 0);\n            rating = totalRating / user.executorReviews.length;\n        }\n        return {\n            id: user.id,\n            experiencePoints: user.experiencePoints,\n            currentLevel: user.currentLevel,\n            totalXpEarned: user.totalXpEarned,\n            dailyXpEarned: user.dailyXpEarned,\n            weeklyXpEarned: user.weeklyXpEarned,\n            monthlyXpEarned: user.monthlyXpEarned,\n            referralCount: user.referralCount,\n            referralEarnings: Number(user.referralEarnings),\n            ordersCount,\n            reviewsCount,\n            rating,\n            averageResponseTime: 0,\n            dailyLoginStreak: 0,\n            nightOrdersCount: 0,\n            weekendOrdersCount: 0,\n            consecutiveOrders: 0,\n            isEarlyUser: user.createdAt < new Date(\"2024-01-01\"),\n            mentorCount: 0,\n            totalOrders: ordersCount,\n            monthlyRating: rating // TODO: вычислить за месяц\n        };\n    }\n    groupAchievementsByRarity(achievements) {\n        const grouped = {\n            common: 0,\n            rare: 0,\n            epic: 0,\n            legendary: 0\n        };\n        achievements.forEach((achievement)=>{\n            grouped[achievement.rarity]++;\n        });\n        return grouped;\n    }\n    generateReferralCode() {\n        const chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\";\n        let result = \"\";\n        for(let i = 0; i < 8; i++){\n            result += chars.charAt(Math.floor(Math.random() * chars.length));\n        }\n        return result;\n    }\n    isNewDay(now) {\n        const today = new Date(now.getFullYear(), now.getMonth(), now.getDate());\n        const yesterday = new Date(today);\n        yesterday.setDate(yesterday.getDate() - 1);\n        return now >= today;\n    }\n    isNewWeek(now) {\n        const startOfWeek = new Date(now);\n        startOfWeek.setDate(now.getDate() - now.getDay());\n        startOfWeek.setHours(0, 0, 0, 0);\n        return now >= startOfWeek;\n    }\n    isNewMonth(now) {\n        const startOfMonth = new Date(now.getFullYear(), now.getMonth(), 1);\n        return now >= startOfMonth;\n    }\n}\nconst gamificationService = new GamificationService();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./lib/gamification/gamificationService.ts\n");

/***/ }),

/***/ "(rsc)/./lib/gamification/notificationService.ts":
/*!*************************************************!*\
  !*** ./lib/gamification/notificationService.ts ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   NotificationService: () => (/* binding */ NotificationService)\n/* harmony export */ });\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @prisma/client */ \"@prisma/client\");\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_prisma_client__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _email_emailService__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../email/emailService */ \"(rsc)/./lib/email/emailService.ts\");\n\n\nconst prisma = new _prisma_client__WEBPACK_IMPORTED_MODULE_0__.PrismaClient();\nclass NotificationService {\n    // Создание уведомления\n    async createNotification(data) {\n        try {\n            await prisma.notification.create({\n                data: {\n                    userId: data.userId,\n                    title: data.title,\n                    message: data.message,\n                    type: data.type,\n                    // metadata: data.metadata || {},\n                    isRead: false\n                }\n            });\n            // Отправляем email уведомление\n            await this.sendEmailNotification(data);\n        } catch (error) {\n            console.error(\"Error creating notification:\", error);\n        }\n    }\n    // Отправка email уведомления\n    async sendEmailNotification(data) {\n        try {\n            // Получаем email пользователя\n            const user = await prisma.user.findUnique({\n                where: {\n                    id: data.userId\n                },\n                select: {\n                    email: true\n                }\n            });\n            if (!user?.email) return;\n            // Отправляем email в зависимости от типа уведомления\n            switch(data.type){\n                case \"level_up\":\n                    if (data.metadata?.levelConfig) {\n                        await _email_emailService__WEBPACK_IMPORTED_MODULE_1__.emailService.sendLevelUpNotification(user.email, data.metadata.levelConfig);\n                    }\n                    break;\n            }\n        } catch (error) {\n            console.error(\"Error sending email notification:\", error);\n        }\n    }\n    // Создание уведомления о повышении уровня\n    async notifyLevelUp(userId, oldLevel, newLevel, levelConfig) {\n        await this.createNotification({\n            userId,\n            type: \"level_up\",\n            title: \"\\uD83C\\uDF89 Поздравляем с повышением уровня!\",\n            message: `Вы достигли уровня ${newLevel} - ${levelConfig.title}! ${levelConfig.icon}`,\n            icon: levelConfig.icon,\n            metadata: {\n                oldLevel,\n                newLevel,\n                levelConfig\n            }\n        });\n    }\n    // Создание уведомления о получении достижения\n    async notifyAchievement(userId, achievement) {\n        await this.createNotification({\n            userId,\n            type: \"achievement\",\n            title: \"\\uD83C\\uDFC6 Новое достижение!\",\n            message: `Вы получили достижение \"${achievement.title}\"! ${achievement.icon}`,\n            icon: achievement.icon,\n            xpAmount: achievement.xpReward,\n            metadata: {\n                achievementId: achievement.id,\n                achievement\n            }\n        });\n    }\n    // Создание уведомления о получении XP\n    async notifyXpGain(userId, xpAmount, source, description) {\n        await this.createNotification({\n            userId,\n            type: \"xp_gain\",\n            title: \"⚡ Получен XP!\",\n            message: `+${xpAmount} XP за ${description}`,\n            xpAmount,\n            metadata: {\n                source,\n                description\n            }\n        });\n    }\n    // Создание уведомления о реферале\n    async notifyReferral(userId, referralType, data) {\n        if (referralType === \"new_referral\") {\n            await this.createNotification({\n                userId,\n                type: \"referral\",\n                title: \"\\uD83D\\uDC65 Новый реферал!\",\n                message: `Ваш друг ${data.referredName} зарегистрировался по вашей ссылке!`,\n                icon: \"\\uD83C\\uDF81\",\n                xpAmount: data.xpReward,\n                metadata: data\n            });\n        } else if (referralType === \"referral_activity\") {\n            await this.createNotification({\n                userId,\n                type: \"referral\",\n                title: \"\\uD83C\\uDFAF Реферал активен!\",\n                message: `Ваш реферал ${data.referredName} ${data.activity}!`,\n                icon: \"⭐\",\n                xpAmount: data.xpReward,\n                metadata: data\n            });\n        }\n    }\n    // Создание уведомления о подписке\n    async notifySubscription(userId, subscriptionType, data) {\n        if (subscriptionType === \"new\") {\n            await this.createNotification({\n                userId,\n                type: \"subscription\",\n                title: \"\\uD83D\\uDCB3 Подписка активирована!\",\n                message: `Ваша подписка \"${data.planName}\" успешно активирована!`,\n                icon: \"\\uD83D\\uDC51\",\n                xpAmount: data.xpReward,\n                metadata: data\n            });\n        } else if (subscriptionType === \"renewal\") {\n            await this.createNotification({\n                userId,\n                type: \"subscription\",\n                title: \"\\uD83D\\uDD04 Подписка продлена!\",\n                message: `Ваша подписка \"${data.planName}\" продлена на ${data.period}!`,\n                icon: \"\\uD83D\\uDC8E\",\n                xpAmount: data.xpReward,\n                metadata: data\n            });\n        }\n    }\n    // Получение уведомлений пользователя\n    async getUserNotifications(userId, limit = 20) {\n        try {\n            const notifications = await prisma.notification.findMany({\n                where: {\n                    userId\n                },\n                orderBy: {\n                    createdAt: \"desc\"\n                },\n                take: limit\n            });\n            return notifications;\n        } catch (error) {\n            console.error(\"Error fetching notifications:\", error);\n            return [];\n        }\n    }\n    // Отметить уведомление как прочитанное\n    async markAsRead(notificationId) {\n        try {\n            await prisma.notification.update({\n                where: {\n                    id: notificationId\n                },\n                data: {\n                    isRead: true\n                }\n            });\n        } catch (error) {\n            console.error(\"Error marking notification as read:\", error);\n        }\n    }\n    // Отметить все уведомления как прочитанные\n    async markAllAsRead(userId) {\n        try {\n            await prisma.notification.updateMany({\n                where: {\n                    userId,\n                    isRead: false\n                },\n                data: {\n                    isRead: true\n                }\n            });\n        } catch (error) {\n            console.error(\"Error marking all notifications as read:\", error);\n        }\n    }\n    // Получение количества непрочитанных уведомлений\n    async getUnreadCount(userId) {\n        try {\n            const count = await prisma.notification.count({\n                where: {\n                    userId,\n                    isRead: false\n                }\n            });\n            return count;\n        } catch (error) {\n            console.error(\"Error getting unread count:\", error);\n            return 0;\n        }\n    }\n    // Удаление старых уведомлений (старше 30 дней)\n    async cleanupOldNotifications() {\n        try {\n            const thirtyDaysAgo = new Date();\n            thirtyDaysAgo.setDate(thirtyDaysAgo.getDate() - 30);\n            await prisma.notification.deleteMany({\n                where: {\n                    createdAt: {\n                        lt: thirtyDaysAgo\n                    },\n                    isRead: true\n                }\n            });\n        } catch (error) {\n            console.error(\"Error cleaning up old notifications:\", error);\n        }\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./lib/gamification/notificationService.ts\n");

/***/ }),

/***/ "(rsc)/./lib/gamification/referralService.ts":
/*!*********************************************!*\
  !*** ./lib/gamification/referralService.ts ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ReferralService: () => (/* binding */ ReferralService)\n/* harmony export */ });\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @prisma/client */ \"@prisma/client\");\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_prisma_client__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./constants */ \"(rsc)/./lib/gamification/constants.ts\");\n/* harmony import */ var _gamificationService__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./gamificationService */ \"(rsc)/./lib/gamification/gamificationService.ts\");\n\n\n\nconst prisma = new _prisma_client__WEBPACK_IMPORTED_MODULE_0__.PrismaClient();\nclass ReferralService {\n    // Создание реферального кода\n    async createReferralCode(userId) {\n        const user = await prisma.user.findUnique({\n            where: {\n                id: userId\n            },\n            select: {\n                referralCode: true,\n                role: true\n            }\n        });\n        if (!user) {\n            throw new Error(\"Пользователь не найден\");\n        }\n        // Если код уже есть, возвращаем его\n        if (user.referralCode) {\n            return user.referralCode;\n        }\n        // Генерируем уникальный код\n        const code = this.generateReferralCode(user.role);\n        await prisma.user.update({\n            where: {\n                id: userId\n            },\n            data: {\n                referralCode: code\n            }\n        });\n        return code;\n    }\n    // Использование реферального кода\n    async useReferralCode(userId, referralCode) {\n        // Находим пользователя, который пригласил\n        const referrer = await prisma.user.findUnique({\n            where: {\n                referralCode\n            },\n            select: {\n                id: true,\n                role: true,\n                referralCount: true\n            }\n        });\n        if (!referrer) {\n            return {\n                success: false,\n                message: \"Неверный реферальный код\"\n            };\n        }\n        if (referrer.id === userId) {\n            return {\n                success: false,\n                message: \"Нельзя использовать свой реферальный код\"\n            };\n        }\n        // Проверяем, не использовал ли уже этот пользователь реферальный код\n        const user = await prisma.user.findUnique({\n            where: {\n                id: userId\n            },\n            select: {\n                referredBy: true,\n                role: true\n            }\n        });\n        if (user?.referredBy) {\n            return {\n                success: false,\n                message: \"Вы уже использовали реферальный код\"\n            };\n        }\n        // Обновляем пользователя\n        await prisma.user.update({\n            where: {\n                id: userId\n            },\n            data: {\n                referredBy: referrer.id\n            }\n        });\n        // Увеличиваем счетчик рефералов\n        await prisma.user.update({\n            where: {\n                id: referrer.id\n            },\n            data: {\n                referralCount: referrer.referralCount + 1\n            }\n        });\n        // Создаем награды\n        const rewards = await this.createReferralRewards(referrer.id, userId, referrer.role, user?.role || \"client\");\n        // Проверяем уровни после начисления XP\n        try {\n            const gamificationService = new _gamificationService__WEBPACK_IMPORTED_MODULE_2__.GamificationService();\n            // Проверяем уровень пригласившего\n            const referrerLevel = gamificationService.calculateLevel((await prisma.user.findUnique({\n                where: {\n                    id: referrer.id\n                },\n                select: {\n                    experiencePoints: true\n                }\n            }))?.experiencePoints || 0, referrer.role);\n            const referrerCurrentLevel = (await prisma.user.findUnique({\n                where: {\n                    id: referrer.id\n                },\n                select: {\n                    currentLevel: true\n                }\n            }))?.currentLevel || 1;\n            if (referrerLevel > referrerCurrentLevel) {\n                await prisma.user.update({\n                    where: {\n                        id: referrer.id\n                    },\n                    data: {\n                        currentLevel: referrerLevel\n                    }\n                });\n            }\n            // Проверяем уровень приглашенного\n            const referredLevel = gamificationService.calculateLevel((await prisma.user.findUnique({\n                where: {\n                    id: userId\n                },\n                select: {\n                    experiencePoints: true\n                }\n            }))?.experiencePoints || 0, user?.role || \"client\");\n            const referredCurrentLevel = (await prisma.user.findUnique({\n                where: {\n                    id: userId\n                },\n                select: {\n                    currentLevel: true\n                }\n            }))?.currentLevel || 1;\n            if (referredLevel > referredCurrentLevel) {\n                await prisma.user.update({\n                    where: {\n                        id: userId\n                    },\n                    data: {\n                        currentLevel: referredLevel\n                    }\n                });\n            }\n        } catch (error) {\n            console.error(\"Ошибка при проверке уровней:\", error);\n        }\n        return {\n            success: true,\n            message: \"Реферальный код успешно применен!\",\n            rewards\n        };\n    }\n    // Создание наград за реферал\n    async createReferralRewards(referrerId, referredId, referrerRole, referredRole) {\n        const rewards = [];\n        const gamificationService = new _gamificationService__WEBPACK_IMPORTED_MODULE_2__.GamificationService();\n        // Награды для пригласившего\n        if (referrerRole === \"client\") {\n            // Клиент пригласил клиента\n            const referrerXp = _constants__WEBPACK_IMPORTED_MODULE_1__.XP_REWARDS.REFERRAL_REGISTRATION;\n            // Используем GamificationService для начисления XP (автоматически обновит уровень)\n            await gamificationService.addXp(referrerId, {\n                amount: referrerXp,\n                source: \"referral\",\n                description: \"Приглашение друга\",\n                metadata: {\n                    referredUserId: referredId\n                }\n            });\n            rewards.push({\n                type: \"referrer\",\n                xp: referrerXp,\n                bonus: \"Приоритет в поиске на месяц\"\n            });\n        } else if (referrerRole === \"executor\") {\n            // Исполнитель пригласил исполнителя\n            const referrerXp = _constants__WEBPACK_IMPORTED_MODULE_1__.XP_REWARDS.REFERRAL_EXECUTOR_REGISTRATION;\n            // Используем GamificationService для начисления XP (автоматически обновит уровень)\n            await gamificationService.addXp(referrerId, {\n                amount: referrerXp,\n                source: \"referral\",\n                description: \"Приглашение коллеги\",\n                metadata: {\n                    referredUserId: referredId\n                }\n            });\n            rewards.push({\n                type: \"referrer\",\n                xp: referrerXp,\n                bonus: \"Неделя бесплатной подписки\"\n            });\n        }\n        // Награды для приглашенного\n        if (referredRole === \"client\") {\n            const referredXp = _constants__WEBPACK_IMPORTED_MODULE_1__.XP_REWARDS.REFERRAL_REGISTRATION / 2;\n            // Используем GamificationService для начисления XP (автоматически обновит уровень)\n            await gamificationService.addXp(referredId, {\n                amount: referredXp,\n                source: \"referral\",\n                description: \"Регистрация по приглашению\",\n                metadata: {\n                    referrerUserId: referrerId\n                }\n            });\n            rewards.push({\n                type: \"referred\",\n                xp: referredXp,\n                bonus: \"VIP статус на месяц\"\n            });\n        } else if (referredRole === \"executor\") {\n            const referredXp = _constants__WEBPACK_IMPORTED_MODULE_1__.XP_REWARDS.REFERRAL_EXECUTOR_REGISTRATION / 2;\n            // Используем GamificationService для начисления XP (автоматически обновит уровень)\n            await gamificationService.addXp(referredId, {\n                amount: referredXp,\n                source: \"referral\",\n                description: \"Регистрация по приглашению\",\n                metadata: {\n                    referrerUserId: referrerId\n                }\n            });\n            rewards.push({\n                type: \"referred\",\n                xp: referredXp,\n                bonus: \"Месяц бесплатной подписки\"\n            });\n        }\n        // Достижения уже проверяются в GamificationService.addXp()\n        return rewards;\n    }\n    // Награда за первую подписку реферала (для исполнителей)\n    async rewardReferralSubscription(referredId) {\n        const gamificationService = new _gamificationService__WEBPACK_IMPORTED_MODULE_2__.GamificationService();\n        const user = await prisma.user.findUnique({\n            where: {\n                id: referredId\n            },\n            select: {\n                referredBy: true,\n                role: true\n            }\n        });\n        if (!user?.referredBy) return;\n        const referrer = await prisma.user.findUnique({\n            where: {\n                id: user.referredBy\n            },\n            select: {\n                role: true\n            }\n        });\n        if (!referrer) return;\n        // Награждаем пригласившего за подписку реферала\n        if (referrer.role === \"executor\" && user.role === \"executor\") {\n            const xpReward = _constants__WEBPACK_IMPORTED_MODULE_1__.XP_REWARDS.REFERRAL_EXECUTOR_SUBSCRIPTION;\n            // Используем GamificationService для начисления XP (автоматически обновит уровень)\n            await gamificationService.addXp(user.referredBy, {\n                amount: xpReward,\n                source: \"referral\",\n                description: \"Реферал оформил подписку\",\n                metadata: {\n                    referredUserId: referredId\n                }\n            });\n            // Создаем запись о награде\n            await prisma.referralReward.create({\n                data: {\n                    referrerId: user.referredBy,\n                    referredId: referredId,\n                    rewardType: \"xp\",\n                    rewardAmount: 0,\n                    xpAmount: xpReward,\n                    description: \"Реферал оформил подписку\",\n                    isPaid: true,\n                    paidAt: new Date()\n                }\n            });\n        }\n    }\n    // Получение статистики рефералов\n    async getReferralStats(userId) {\n        const user = await prisma.user.findUnique({\n            where: {\n                id: userId\n            },\n            select: {\n                referralCode: true,\n                referralCount: true,\n                referralEarnings: true,\n                referredBy: true\n            }\n        });\n        if (!user) {\n            throw new Error(\"Пользователь не найден\");\n        }\n        // Получаем список рефералов\n        const referrals = await prisma.user.findMany({\n            where: {\n                referredBy: userId\n            },\n            select: {\n                id: true,\n                name: true,\n                email: true,\n                role: true,\n                createdAt: true,\n                experiencePoints: true\n            },\n            orderBy: {\n                createdAt: \"desc\"\n            }\n        });\n        // Получаем награды\n        const rewards = await prisma.referralReward.findMany({\n            where: {\n                referrerId: userId\n            },\n            select: {\n                id: true,\n                rewardType: true,\n                rewardAmount: true,\n                xpAmount: true,\n                description: true,\n                isPaid: true,\n                createdAt: true\n            },\n            orderBy: {\n                createdAt: \"desc\"\n            }\n        });\n        return {\n            referralCode: user.referralCode,\n            totalReferrals: user.referralCount,\n            totalEarnings: user.referralEarnings,\n            referrals: referrals,\n            rewards: rewards,\n            isReferred: !!user.referredBy\n        };\n    }\n    // Генерация реферального кода\n    generateReferralCode(role) {\n        const prefix = role === \"executor\" ? \"EXE\" : \"CLI\";\n        const random = Math.random().toString(36).substring(2, 8).toUpperCase();\n        return `${prefix}${random}`;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./lib/gamification/referralService.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/nodemailer"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fgamification%2Freferral%2Froute&page=%2Fapi%2Fgamification%2Freferral%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fgamification%2Freferral%2Froute.ts&appDir=D%3A%5Cmobile%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=D%3A%5Cmobile&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();