"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/notifications/route";
exports.ids = ["app/api/notifications/route"];
exports.modules = {

/***/ "@prisma/client":
/*!*********************************!*\
  !*** external "@prisma/client" ***!
  \*********************************/
/***/ ((module) => {

module.exports = require("@prisma/client");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "child_process":
/*!********************************!*\
  !*** external "child_process" ***!
  \********************************/
/***/ ((module) => {

module.exports = require("child_process");

/***/ }),

/***/ "crypto":
/*!*************************!*\
  !*** external "crypto" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("crypto");

/***/ }),

/***/ "dns":
/*!**********************!*\
  !*** external "dns" ***!
  \**********************/
/***/ ((module) => {

module.exports = require("dns");

/***/ }),

/***/ "events":
/*!*************************!*\
  !*** external "events" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("events");

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/***/ ((module) => {

module.exports = require("fs");

/***/ }),

/***/ "http":
/*!***********************!*\
  !*** external "http" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("http");

/***/ }),

/***/ "https":
/*!************************!*\
  !*** external "https" ***!
  \************************/
/***/ ((module) => {

module.exports = require("https");

/***/ }),

/***/ "net":
/*!**********************!*\
  !*** external "net" ***!
  \**********************/
/***/ ((module) => {

module.exports = require("net");

/***/ }),

/***/ "os":
/*!*********************!*\
  !*** external "os" ***!
  \*********************/
/***/ ((module) => {

module.exports = require("os");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("path");

/***/ }),

/***/ "stream":
/*!*************************!*\
  !*** external "stream" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("stream");

/***/ }),

/***/ "tls":
/*!**********************!*\
  !*** external "tls" ***!
  \**********************/
/***/ ((module) => {

module.exports = require("tls");

/***/ }),

/***/ "url":
/*!**********************!*\
  !*** external "url" ***!
  \**********************/
/***/ ((module) => {

module.exports = require("url");

/***/ }),

/***/ "util":
/*!***********************!*\
  !*** external "util" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("util");

/***/ }),

/***/ "zlib":
/*!***********************!*\
  !*** external "zlib" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("zlib");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fnotifications%2Froute&page=%2Fapi%2Fnotifications%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fnotifications%2Froute.ts&appDir=D%3A%5Cmobile%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=D%3A%5Cmobile&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":
/*!*********************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fnotifications%2Froute&page=%2Fapi%2Fnotifications%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fnotifications%2Froute.ts&appDir=D%3A%5Cmobile%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=D%3A%5Cmobile&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!
  \*********************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   headerHooks: () => (/* binding */ headerHooks),\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage),\n/* harmony export */   staticGenerationBailout: () => (/* binding */ staticGenerationBailout)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var D_mobile_app_api_notifications_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./app/api/notifications/route.ts */ \"(rsc)/./app/api/notifications/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/notifications/route\",\n        pathname: \"/api/notifications\",\n        filename: \"route\",\n        bundlePath: \"app/api/notifications/route\"\n    },\n    resolvedPagePath: \"D:\\\\mobile\\\\app\\\\api\\\\notifications\\\\route.ts\",\n    nextConfigOutput,\n    userland: D_mobile_app_api_notifications_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks, headerHooks, staticGenerationBailout } = routeModule;\nconst originalPathname = \"/api/notifications/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZub3RpZmljYXRpb25zJTJGcm91dGUmcGFnZT0lMkZhcGklMkZub3RpZmljYXRpb25zJTJGcm91dGUmYXBwUGF0aHM9JnBhZ2VQYXRoPXByaXZhdGUtbmV4dC1hcHAtZGlyJTJGYXBpJTJGbm90aWZpY2F0aW9ucyUyRnJvdXRlLnRzJmFwcERpcj1EJTNBJTVDbW9iaWxlJTVDYXBwJnBhZ2VFeHRlbnNpb25zPXRzeCZwYWdlRXh0ZW5zaW9ucz10cyZwYWdlRXh0ZW5zaW9ucz1qc3gmcGFnZUV4dGVuc2lvbnM9anMmcm9vdERpcj1EJTNBJTVDbW9iaWxlJmlzRGV2PXRydWUmdHNjb25maWdQYXRoPXRzY29uZmlnLmpzb24mYmFzZVBhdGg9JmFzc2V0UHJlZml4PSZuZXh0Q29uZmlnT3V0cHV0PSZwcmVmZXJyZWRSZWdpb249Jm1pZGRsZXdhcmVDb25maWc9ZTMwJTNEISIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7OztBQUFzRztBQUN2QztBQUNjO0FBQ0g7QUFDMUU7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLGdIQUFtQjtBQUMzQztBQUNBLGNBQWMseUVBQVM7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLFlBQVk7QUFDWixDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0EsUUFBUSx1R0FBdUc7QUFDL0c7QUFDQTtBQUNBLFdBQVcsNEVBQVc7QUFDdEI7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUM2Sjs7QUFFN0oiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wcm9kby1hZ2VuY3kvPzExYjQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQXBwUm91dGVSb3V0ZU1vZHVsZSB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1tb2R1bGVzL2FwcC1yb3V0ZS9tb2R1bGUuY29tcGlsZWRcIjtcbmltcG9ydCB7IFJvdXRlS2luZCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1raW5kXCI7XG5pbXBvcnQgeyBwYXRjaEZldGNoIGFzIF9wYXRjaEZldGNoIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvbGliL3BhdGNoLWZldGNoXCI7XG5pbXBvcnQgKiBhcyB1c2VybGFuZCBmcm9tIFwiRDpcXFxcbW9iaWxlXFxcXGFwcFxcXFxhcGlcXFxcbm90aWZpY2F0aW9uc1xcXFxyb3V0ZS50c1wiO1xuLy8gV2UgaW5qZWN0IHRoZSBuZXh0Q29uZmlnT3V0cHV0IGhlcmUgc28gdGhhdCB3ZSBjYW4gdXNlIHRoZW0gaW4gdGhlIHJvdXRlXG4vLyBtb2R1bGUuXG5jb25zdCBuZXh0Q29uZmlnT3V0cHV0ID0gXCJcIlxuY29uc3Qgcm91dGVNb2R1bGUgPSBuZXcgQXBwUm91dGVSb3V0ZU1vZHVsZSh7XG4gICAgZGVmaW5pdGlvbjoge1xuICAgICAgICBraW5kOiBSb3V0ZUtpbmQuQVBQX1JPVVRFLFxuICAgICAgICBwYWdlOiBcIi9hcGkvbm90aWZpY2F0aW9ucy9yb3V0ZVwiLFxuICAgICAgICBwYXRobmFtZTogXCIvYXBpL25vdGlmaWNhdGlvbnNcIixcbiAgICAgICAgZmlsZW5hbWU6IFwicm91dGVcIixcbiAgICAgICAgYnVuZGxlUGF0aDogXCJhcHAvYXBpL25vdGlmaWNhdGlvbnMvcm91dGVcIlxuICAgIH0sXG4gICAgcmVzb2x2ZWRQYWdlUGF0aDogXCJEOlxcXFxtb2JpbGVcXFxcYXBwXFxcXGFwaVxcXFxub3RpZmljYXRpb25zXFxcXHJvdXRlLnRzXCIsXG4gICAgbmV4dENvbmZpZ091dHB1dCxcbiAgICB1c2VybGFuZFxufSk7XG4vLyBQdWxsIG91dCB0aGUgZXhwb3J0cyB0aGF0IHdlIG5lZWQgdG8gZXhwb3NlIGZyb20gdGhlIG1vZHVsZS4gVGhpcyBzaG91bGRcbi8vIGJlIGVsaW1pbmF0ZWQgd2hlbiB3ZSd2ZSBtb3ZlZCB0aGUgb3RoZXIgcm91dGVzIHRvIHRoZSBuZXcgZm9ybWF0LiBUaGVzZVxuLy8gYXJlIHVzZWQgdG8gaG9vayBpbnRvIHRoZSByb3V0ZS5cbmNvbnN0IHsgcmVxdWVzdEFzeW5jU3RvcmFnZSwgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MsIGhlYWRlckhvb2tzLCBzdGF0aWNHZW5lcmF0aW9uQmFpbG91dCB9ID0gcm91dGVNb2R1bGU7XG5jb25zdCBvcmlnaW5hbFBhdGhuYW1lID0gXCIvYXBpL25vdGlmaWNhdGlvbnMvcm91dGVcIjtcbmZ1bmN0aW9uIHBhdGNoRmV0Y2goKSB7XG4gICAgcmV0dXJuIF9wYXRjaEZldGNoKHtcbiAgICAgICAgc2VydmVySG9va3MsXG4gICAgICAgIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2VcbiAgICB9KTtcbn1cbmV4cG9ydCB7IHJvdXRlTW9kdWxlLCByZXF1ZXN0QXN5bmNTdG9yYWdlLCBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlLCBzZXJ2ZXJIb29rcywgaGVhZGVySG9va3MsIHN0YXRpY0dlbmVyYXRpb25CYWlsb3V0LCBvcmlnaW5hbFBhdGhuYW1lLCBwYXRjaEZldGNoLCAgfTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YXBwLXJvdXRlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fnotifications%2Froute&page=%2Fapi%2Fnotifications%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fnotifications%2Froute.ts&appDir=D%3A%5Cmobile%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=D%3A%5Cmobile&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./app/api/notifications/route.ts":
/*!****************************************!*\
  !*** ./app/api/notifications/route.ts ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GET: () => (/* binding */ GET)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/web/exports/next-response */ \"(rsc)/./node_modules/next/dist/server/web/exports/next-response.js\");\n/* harmony import */ var _lib_gamification_notificationService__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../lib/gamification/notificationService */ \"(rsc)/./lib/gamification/notificationService.ts\");\n\n\nconst notificationService = new _lib_gamification_notificationService__WEBPACK_IMPORTED_MODULE_1__.NotificationService();\nasync function GET(request) {\n    try {\n        const { searchParams } = new URL(request.url);\n        const userId = searchParams.get(\"userId\");\n        if (!userId) {\n            return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                error: \"User ID is required\"\n            }, {\n                status: 400\n            });\n        }\n        const notifications = await notificationService.getUserNotifications(parseInt(userId));\n        const unreadCount = await notificationService.getUnreadCount(parseInt(userId));\n        return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n            success: true,\n            notifications,\n            unreadCount\n        });\n    } catch (error) {\n        console.error(\"Error fetching notifications:\", error);\n        return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n            error: \"Failed to fetch notifications\"\n        }, {\n            status: 500\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9hcHAvYXBpL25vdGlmaWNhdGlvbnMvcm91dGUudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQXVEO0FBQzRCO0FBRW5GLE1BQU1FLHNCQUFzQixJQUFJRCxzRkFBbUJBO0FBRTVDLGVBQWVFLElBQUlDLE9BQW9CO0lBQzVDLElBQUk7UUFDRixNQUFNLEVBQUVDLFlBQVksRUFBRSxHQUFHLElBQUlDLElBQUlGLFFBQVFHLEdBQUc7UUFDNUMsTUFBTUMsU0FBU0gsYUFBYUksR0FBRyxDQUFDO1FBRWhDLElBQUksQ0FBQ0QsUUFBUTtZQUNYLE9BQU9SLGtGQUFZQSxDQUFDVSxJQUFJLENBQUM7Z0JBQUVDLE9BQU87WUFBc0IsR0FBRztnQkFBRUMsUUFBUTtZQUFJO1FBQzNFO1FBRUEsTUFBTUMsZ0JBQWdCLE1BQU1YLG9CQUFvQlksb0JBQW9CLENBQUNDLFNBQVNQO1FBQzlFLE1BQU1RLGNBQWMsTUFBTWQsb0JBQW9CZSxjQUFjLENBQUNGLFNBQVNQO1FBRXRFLE9BQU9SLGtGQUFZQSxDQUFDVSxJQUFJLENBQUM7WUFDdkJRLFNBQVM7WUFDVEw7WUFDQUc7UUFDRjtJQUNGLEVBQUUsT0FBT0wsT0FBTztRQUNkUSxRQUFRUixLQUFLLENBQUMsaUNBQWlDQTtRQUMvQyxPQUFPWCxrRkFBWUEsQ0FBQ1UsSUFBSSxDQUN0QjtZQUFFQyxPQUFPO1FBQWdDLEdBQ3pDO1lBQUVDLFFBQVE7UUFBSTtJQUVsQjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcHJvZG8tYWdlbmN5Ly4vYXBwL2FwaS9ub3RpZmljYXRpb25zL3JvdXRlLnRzPzhlMGMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmV4dFJlcXVlc3QsIE5leHRSZXNwb25zZSB9IGZyb20gJ25leHQvc2VydmVyJ1xyXG5pbXBvcnQgeyBOb3RpZmljYXRpb25TZXJ2aWNlIH0gZnJvbSAnLi4vLi4vLi4vbGliL2dhbWlmaWNhdGlvbi9ub3RpZmljYXRpb25TZXJ2aWNlJ1xyXG5cclxuY29uc3Qgbm90aWZpY2F0aW9uU2VydmljZSA9IG5ldyBOb3RpZmljYXRpb25TZXJ2aWNlKClcclxuXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBHRVQocmVxdWVzdDogTmV4dFJlcXVlc3QpIHtcclxuICB0cnkge1xyXG4gICAgY29uc3QgeyBzZWFyY2hQYXJhbXMgfSA9IG5ldyBVUkwocmVxdWVzdC51cmwpXHJcbiAgICBjb25zdCB1c2VySWQgPSBzZWFyY2hQYXJhbXMuZ2V0KCd1c2VySWQnKVxyXG5cclxuICAgIGlmICghdXNlcklkKSB7XHJcbiAgICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbih7IGVycm9yOiAnVXNlciBJRCBpcyByZXF1aXJlZCcgfSwgeyBzdGF0dXM6IDQwMCB9KVxyXG4gICAgfVxyXG5cclxuICAgIGNvbnN0IG5vdGlmaWNhdGlvbnMgPSBhd2FpdCBub3RpZmljYXRpb25TZXJ2aWNlLmdldFVzZXJOb3RpZmljYXRpb25zKHBhcnNlSW50KHVzZXJJZCkpXHJcbiAgICBjb25zdCB1bnJlYWRDb3VudCA9IGF3YWl0IG5vdGlmaWNhdGlvblNlcnZpY2UuZ2V0VW5yZWFkQ291bnQocGFyc2VJbnQodXNlcklkKSlcclxuICAgIFxyXG4gICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKHsgXHJcbiAgICAgIHN1Y2Nlc3M6IHRydWUsIFxyXG4gICAgICBub3RpZmljYXRpb25zLFxyXG4gICAgICB1bnJlYWRDb3VudFxyXG4gICAgfSlcclxuICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgY29uc29sZS5lcnJvcignRXJyb3IgZmV0Y2hpbmcgbm90aWZpY2F0aW9uczonLCBlcnJvcilcclxuICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbihcclxuICAgICAgeyBlcnJvcjogJ0ZhaWxlZCB0byBmZXRjaCBub3RpZmljYXRpb25zJyB9LFxyXG4gICAgICB7IHN0YXR1czogNTAwIH1cclxuICAgIClcclxuICB9XHJcbn0iXSwibmFtZXMiOlsiTmV4dFJlc3BvbnNlIiwiTm90aWZpY2F0aW9uU2VydmljZSIsIm5vdGlmaWNhdGlvblNlcnZpY2UiLCJHRVQiLCJyZXF1ZXN0Iiwic2VhcmNoUGFyYW1zIiwiVVJMIiwidXJsIiwidXNlcklkIiwiZ2V0IiwianNvbiIsImVycm9yIiwic3RhdHVzIiwibm90aWZpY2F0aW9ucyIsImdldFVzZXJOb3RpZmljYXRpb25zIiwicGFyc2VJbnQiLCJ1bnJlYWRDb3VudCIsImdldFVucmVhZENvdW50Iiwic3VjY2VzcyIsImNvbnNvbGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./app/api/notifications/route.ts\n");

/***/ }),

/***/ "(rsc)/./lib/email/emailService.ts":
/*!***********************************!*\
  !*** ./lib/email/emailService.ts ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   emailService: () => (/* binding */ emailService)\n/* harmony export */ });\n/* harmony import */ var nodemailer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! nodemailer */ \"(rsc)/./node_modules/nodemailer/lib/nodemailer.js\");\n\nclass EmailService {\n    constructor(){\n        this.initialize();\n    }\n    initialize() {\n        // Проверяем наличие Gmail настроек\n        this.isDevelopment = !process.env.EMAIL_HOST || !process.env.EMAIL_USER || !process.env.EMAIL_PASS;\n        console.log(\"\\uD83D\\uDD27 EmailService инициализация:\");\n        console.log(`   EMAIL_HOST: ${process.env.EMAIL_HOST || \"НЕ УСТАНОВЛЕН\"}`);\n        console.log(`   EMAIL_USER: ${process.env.EMAIL_USER || \"НЕ УСТАНОВЛЕН\"}`);\n        console.log(`   EMAIL_PASS: ${process.env.EMAIL_PASS ? \"УСТАНОВЛЕН\" : \"НЕ УСТАНОВЛЕН\"}`);\n        console.log(`   Режим: ${this.isDevelopment ? \"РАЗРАБОТКИ\" : \"ПРОДАКШЕН\"}`);\n        if (this.isDevelopment) {\n            // Для разработки используем мок-транспорт\n            this.transporter = nodemailer__WEBPACK_IMPORTED_MODULE_0__.createTransport({\n                streamTransport: true,\n                newline: \"unix\",\n                buffer: true\n            });\n        } else {\n            // Для продакшена используем реальный SMTP\n            this.transporter = nodemailer__WEBPACK_IMPORTED_MODULE_0__.createTransport({\n                host: \"smtp.gmail.com\",\n                port: 587,\n                secure: false,\n                auth: {\n                    user: process.env.EMAIL_USER || \"\",\n                    pass: process.env.EMAIL_PASS || \"\"\n                },\n                tls: {\n                    rejectUnauthorized: false\n                }\n            });\n        }\n    }\n    // Переинициализация после загрузки переменных окружения\n    reinitialize() {\n        this.initialize();\n    }\n    // Проверка подключения\n    async verifyConnection() {\n        try {\n            if (this.isDevelopment) {\n                console.log(\"✅ Email сервер готов к отправке (режим разработки)\");\n                return true;\n            }\n            // Проверяем Gmail SMTP подключение\n            await this.transporter.verify();\n            console.log(\"✅ Email сервер готов к отправке\");\n            return true;\n        } catch (error) {\n            console.error(\"❌ Ошибка подключения к email серверу:\", error);\n            return false;\n        }\n    }\n    // Отправка email\n    async sendEmail(to, template) {\n        try {\n            if (this.isDevelopment) {\n                // В режиме разработки логируем с деталями\n                console.log(\"\\uD83D\\uDCE7 [DEV] Email отправлен:\");\n                console.log(`   Кому: ${to}`);\n                console.log(`   Тема: ${template.subject}`);\n                console.log(`   HTML: ${template.html.substring(0, 100)}...`);\n                console.log(`   📝 В продакшене это письмо будет отправлено на: ${to}`);\n                return true;\n            }\n            // Используем Gmail SMTP для отправки\n            const mailOptions = {\n                from: process.env.EMAIL_USER,\n                to: to,\n                subject: template.subject,\n                html: template.html,\n                text: template.text\n            };\n            await this.transporter.sendMail(mailOptions);\n            console.log(\"\\uD83D\\uDCE7 Email отправлен через Gmail:\", to);\n            return true;\n        } catch (error) {\n            console.error(\"❌ Ошибка отправки email:\", error);\n            return false;\n        }\n    }\n    // Отправка уведомления о новом заказе (исполнителю)\n    async sendNewOrderNotification(executorEmail, orderData) {\n        if (this.isDevelopment) {\n            return await this.sendEmail(executorEmail, {\n                subject: \"\\uD83C\\uDFAF Новый заказ для вас!\",\n                html: `\r\n          <div style=\"font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;\">\r\n            <div style=\"background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); padding: 20px; text-align: center;\">\r\n              <h1 style=\"color: white; margin: 0;\">🎯 Новый заказ!</h1>\r\n            </div>\r\n            \r\n            <div style=\"padding: 20px; background: #f8f9fa;\">\r\n              <h2 style=\"color: #333;\">Детали заказа:</h2>\r\n              <div style=\"background: white; padding: 15px; border-radius: 8px; margin: 10px 0;\">\r\n                <p><strong>Услуга:</strong> ${orderData.serviceDescription || \"Не указано\"}</p>\r\n                <p><strong>Клиент:</strong> ${orderData.clientName || \"Не указано\"}</p>\r\n                <p><strong>Адрес:</strong> ${orderData.address || \"Не указано\"}</p>\r\n                <p><strong>Телефон:</strong> ${orderData.phone || \"Не указано\"}</p>\r\n                <p><strong>Дата:</strong> ${orderData.orderDate || \"Не указано\"}</p>\r\n                <p><strong>Время:</strong> ${orderData.orderTime || \"Не указано\"}</p>\r\n                <p><strong>Цена:</strong> ${orderData.totalPrice || 0} ₽</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        `,\n                text: `Новый заказ! Услуга: ${orderData.serviceDescription}, Клиент: ${orderData.clientName}, Цена: ${orderData.totalPrice} ₽`\n            });\n        }\n        return await this.sendEmail(executorEmail, {\n            subject: \"\\uD83C\\uDFAF Новый заказ для вас!\",\n            html: `\r\n        <div style=\"font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;\">\r\n          <div style=\"background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); padding: 20px; text-align: center;\">\r\n            <h1 style=\"color: white; margin: 0;\">🎯 Новый заказ!</h1>\r\n          </div>\r\n          \r\n          <div style=\"padding: 20px; background: #f8f9fa;\">\r\n            <h2 style=\"color: #333;\">Детали заказа:</h2>\r\n            <div style=\"background: white; padding: 15px; border-radius: 8px; margin: 10px 0;\">\r\n              <p><strong>Услуга:</strong> ${orderData.serviceDescription || \"Не указано\"}</p>\r\n              <p><strong>Клиент:</strong> ${orderData.clientName || \"Не указано\"}</p>\r\n              <p><strong>Адрес:</strong> ${orderData.address || \"Не указано\"}</p>\r\n              <p><strong>Телефон:</strong> ${orderData.phone || \"Не указано\"}</p>\r\n              <p><strong>Дата:</strong> ${orderData.orderDate || \"Не указано\"}</p>\r\n              <p><strong>Время:</strong> ${orderData.orderTime || \"Не указано\"}</p>\r\n              <p><strong>Цена:</strong> ${orderData.totalPrice || 0} ₽</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      `,\n            text: `Новый заказ! Услуга: ${orderData.serviceDescription}, Клиент: ${orderData.clientName}, Цена: ${orderData.totalPrice} ₽`\n        });\n    }\n    // Отправка уведомления о выполнении заказа (клиенту)\n    async sendOrderCompletedNotification(clientEmail, orderData) {\n        if (this.isDevelopment) {\n            return await this.sendEmail(clientEmail, {\n                subject: \"✅ Ваш заказ выполнен!\",\n                html: `\r\n          <div style=\"font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;\">\r\n            <div style=\"background: linear-gradient(135deg, #28a745 0%, #20c997 100%); padding: 20px; text-align: center;\">\r\n              <h1 style=\"color: white; margin: 0;\">✅ Заказ выполнен!</h1>\r\n            </div>\r\n            \r\n            <div style=\"padding: 20px; background: #f8f9fa;\">\r\n              <h2 style=\"color: #333;\">Ваш заказ успешно выполнен!</h2>\r\n              <div style=\"background: white; padding: 15px; border-radius: 8px; margin: 10px 0;\">\r\n                <p><strong>Услуга:</strong> ${orderData.serviceDescription || \"Не указано\"}</p>\r\n                <p><strong>Исполнитель:</strong> ${orderData.executorName || \"Не указано\"}</p>\r\n                <p><strong>Дата выполнения:</strong> ${new Date().toLocaleDateString(\"ru-RU\")}</p>\r\n                <p><strong>Сумма:</strong> ${orderData.totalPrice || 0} ₽</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        `,\n                text: `Заказ выполнен! Услуга: ${orderData.serviceDescription}, Исполнитель: ${orderData.executorName}, Сумма: ${orderData.totalPrice} ₽`\n            });\n        }\n        return await this.sendEmail(clientEmail, {\n            subject: \"✅ Ваш заказ выполнен!\",\n            html: `\r\n        <div style=\"font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;\">\r\n          <div style=\"background: linear-gradient(135deg, #28a745 0%, #20c997 100%); padding: 20px; text-align: center;\">\r\n            <h1 style=\"color: white; margin: 0;\">✅ Заказ выполнен!</h1>\r\n          </div>\r\n          \r\n          <div style=\"padding: 20px; background: #f8f9fa;\">\r\n            <h2 style=\"color: #333;\">Ваш заказ успешно выполнен!</h2>\r\n            <div style=\"background: white; padding: 15px; border-radius: 8px; margin: 10px 0;\">\r\n              <p><strong>Услуга:</strong> ${orderData.serviceDescription || \"Не указано\"}</p>\r\n              <p><strong>Исполнитель:</strong> ${orderData.executorName || \"Не указано\"}</p>\r\n              <p><strong>Дата выполнения:</strong> ${new Date().toLocaleDateString(\"ru-RU\")}</p>\r\n              <p><strong>Сумма:</strong> ${orderData.totalPrice || 0} ₽</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      `,\n            text: `Заказ выполнен! Услуга: ${orderData.serviceDescription}, Исполнитель: ${orderData.executorName}, Сумма: ${orderData.totalPrice} ₽`\n        });\n    }\n    // Отправка уведомления о повышении уровня\n    async sendLevelUpNotification(userEmail, levelData) {\n        if (this.isDevelopment) {\n            return await this.sendEmail(userEmail, {\n                subject: `🎉 Поздравляем! Вы достигли уровня ${levelData.newLevel}!`,\n                html: `\r\n          <div style=\"font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;\">\r\n            <div style=\"background: linear-gradient(135deg, #ffd700 0%, #ffed4e 100%); padding: 20px; text-align: center;\">\r\n              <h1 style=\"color: #333; margin: 0;\">🎉 Поздравляем!</h1>\r\n              <h2 style=\"color: #333; margin: 10px 0 0 0;\">Вы достигли уровня ${levelData.newLevel}!</h2>\r\n            </div>\r\n            \r\n            <div style=\"padding: 20px; background: #f8f9fa;\">\r\n              <div style=\"background: white; padding: 20px; border-radius: 8px; margin: 10px 0; text-align: center;\">\r\n                <div style=\"font-size: 48px; margin-bottom: 15px;\">${levelData.icon}</div>\r\n                <h3 style=\"color: #333; margin: 0;\">${levelData.title}</h3>\r\n                <p style=\"color: #666; margin: 10px 0;\">${levelData.description || \"Отличная работа!\"}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        `,\n                text: `Поздравляем! Вы достигли уровня ${levelData.newLevel} - ${levelData.title}!`\n            });\n        }\n        return await this.sendEmail(userEmail, {\n            subject: `🎉 Поздравляем! Вы достигли уровня ${levelData.newLevel}!`,\n            html: `\r\n        <div style=\"font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;\">\r\n          <div style=\"background: linear-gradient(135deg, #ffd700 0%, #ffed4e 100%); padding: 20px; text-align: center;\">\r\n            <h1 style=\"color: #333; margin: 0;\">🎉 Поздравляем!</h1>\r\n            <h2 style=\"color: #333; margin: 10px 0 0 0;\">Вы достигли уровня ${levelData.newLevel}!</h2>\r\n          </div>\r\n          \r\n          <div style=\"padding: 20px; background: #f8f9fa;\">\r\n            <div style=\"background: white; padding: 20px; border-radius: 8px; margin: 10px 0; text-align: center;\">\r\n              <div style=\"font-size: 48px; margin-bottom: 15px;\">${levelData.icon}</div>\r\n              <h3 style=\"color: #333; margin: 0;\">${levelData.title}</h3>\r\n              <p style=\"color: #666; margin: 10px 0;\">${levelData.description || \"Отличная работа!\"}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      `,\n            text: `Поздравляем! Вы достигли уровня ${levelData.newLevel} - ${levelData.title}!`\n        });\n    }\n    // Отправка новостной рассылки\n    async sendNewsletter(emails, newsletterData) {\n        if (this.isDevelopment) {\n            let success = 0;\n            let failed = 0;\n            for (const email of emails){\n                const result = await this.sendEmail(email, {\n                    subject: newsletterData.subject,\n                    html: `\r\n            <div style=\"font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;\">\r\n              <div style=\"background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); padding: 20px; text-align: center;\">\r\n                <h1 style=\"color: white; margin: 0;\">📢 ${newsletterData.subject}</h1>\r\n              </div>\r\n              \r\n              <div style=\"padding: 20px; background: #f8f9fa;\">\r\n                <div style=\"background: white; padding: 20px; border-radius: 8px; margin: 10px 0;\">\r\n                  ${newsletterData.content}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          `,\n                    text: newsletterData.textContent || newsletterData.subject\n                });\n                if (result) {\n                    success++;\n                } else {\n                    failed++;\n                }\n            }\n            return {\n                success,\n                failed\n            };\n        }\n        let success = 0;\n        let failed = 0;\n        for (const email of emails){\n            const result = await this.sendEmail(email, {\n                subject: newsletterData.subject,\n                html: `\r\n          <div style=\"font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;\">\r\n            <div style=\"background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); padding: 20px; text-align: center;\">\r\n              <h1 style=\"color: white; margin: 0;\">📢 ${newsletterData.subject}</h1>\r\n            </div>\r\n            \r\n            <div style=\"padding: 20px; background: #f8f9fa;\">\r\n              <div style=\"background: white; padding: 20px; border-radius: 8px; margin: 10px 0;\">\r\n                ${newsletterData.content}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        `,\n                text: newsletterData.textContent || newsletterData.subject\n            });\n            if (result) {\n                success++;\n            } else {\n                failed++;\n            }\n        }\n        return {\n            success,\n            failed\n        };\n    }\n}\nconst emailService = new EmailService();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./lib/email/emailService.ts\n");

/***/ }),

/***/ "(rsc)/./lib/gamification/notificationService.ts":
/*!*************************************************!*\
  !*** ./lib/gamification/notificationService.ts ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   NotificationService: () => (/* binding */ NotificationService)\n/* harmony export */ });\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @prisma/client */ \"@prisma/client\");\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_prisma_client__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _email_emailService__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../email/emailService */ \"(rsc)/./lib/email/emailService.ts\");\n\n\nconst prisma = new _prisma_client__WEBPACK_IMPORTED_MODULE_0__.PrismaClient();\nclass NotificationService {\n    // Создание уведомления\n    async createNotification(data) {\n        try {\n            await prisma.notification.create({\n                data: {\n                    userId: data.userId,\n                    title: data.title,\n                    message: data.message,\n                    type: data.type,\n                    // metadata: data.metadata || {},\n                    isRead: false\n                }\n            });\n            // Отправляем email уведомление\n            await this.sendEmailNotification(data);\n        } catch (error) {\n            console.error(\"Error creating notification:\", error);\n        }\n    }\n    // Отправка email уведомления\n    async sendEmailNotification(data) {\n        try {\n            // Получаем email пользователя\n            const user = await prisma.user.findUnique({\n                where: {\n                    id: data.userId\n                },\n                select: {\n                    email: true\n                }\n            });\n            if (!user?.email) return;\n            // Отправляем email в зависимости от типа уведомления\n            switch(data.type){\n                case \"level_up\":\n                    if (data.metadata?.levelConfig) {\n                        await _email_emailService__WEBPACK_IMPORTED_MODULE_1__.emailService.sendLevelUpNotification(user.email, data.metadata.levelConfig);\n                    }\n                    break;\n            }\n        } catch (error) {\n            console.error(\"Error sending email notification:\", error);\n        }\n    }\n    // Создание уведомления о повышении уровня\n    async notifyLevelUp(userId, oldLevel, newLevel, levelConfig) {\n        await this.createNotification({\n            userId,\n            type: \"level_up\",\n            title: \"\\uD83C\\uDF89 Поздравляем с повышением уровня!\",\n            message: `Вы достигли уровня ${newLevel} - ${levelConfig.title}! ${levelConfig.icon}`,\n            icon: levelConfig.icon,\n            metadata: {\n                oldLevel,\n                newLevel,\n                levelConfig\n            }\n        });\n    }\n    // Создание уведомления о получении достижения\n    async notifyAchievement(userId, achievement) {\n        await this.createNotification({\n            userId,\n            type: \"achievement\",\n            title: \"\\uD83C\\uDFC6 Новое достижение!\",\n            message: `Вы получили достижение \"${achievement.title}\"! ${achievement.icon}`,\n            icon: achievement.icon,\n            xpAmount: achievement.xpReward,\n            metadata: {\n                achievementId: achievement.id,\n                achievement\n            }\n        });\n    }\n    // Создание уведомления о получении XP\n    async notifyXpGain(userId, xpAmount, source, description) {\n        await this.createNotification({\n            userId,\n            type: \"xp_gain\",\n            title: \"⚡ Получен XP!\",\n            message: `+${xpAmount} XP за ${description}`,\n            xpAmount,\n            metadata: {\n                source,\n                description\n            }\n        });\n    }\n    // Создание уведомления о реферале\n    async notifyReferral(userId, referralType, data) {\n        if (referralType === \"new_referral\") {\n            await this.createNotification({\n                userId,\n                type: \"referral\",\n                title: \"\\uD83D\\uDC65 Новый реферал!\",\n                message: `Ваш друг ${data.referredName} зарегистрировался по вашей ссылке!`,\n                icon: \"\\uD83C\\uDF81\",\n                xpAmount: data.xpReward,\n                metadata: data\n            });\n        } else if (referralType === \"referral_activity\") {\n            await this.createNotification({\n                userId,\n                type: \"referral\",\n                title: \"\\uD83C\\uDFAF Реферал активен!\",\n                message: `Ваш реферал ${data.referredName} ${data.activity}!`,\n                icon: \"⭐\",\n                xpAmount: data.xpReward,\n                metadata: data\n            });\n        }\n    }\n    // Создание уведомления о подписке\n    async notifySubscription(userId, subscriptionType, data) {\n        if (subscriptionType === \"new\") {\n            await this.createNotification({\n                userId,\n                type: \"subscription\",\n                title: \"\\uD83D\\uDCB3 Подписка активирована!\",\n                message: `Ваша подписка \"${data.planName}\" успешно активирована!`,\n                icon: \"\\uD83D\\uDC51\",\n                xpAmount: data.xpReward,\n                metadata: data\n            });\n        } else if (subscriptionType === \"renewal\") {\n            await this.createNotification({\n                userId,\n                type: \"subscription\",\n                title: \"\\uD83D\\uDD04 Подписка продлена!\",\n                message: `Ваша подписка \"${data.planName}\" продлена на ${data.period}!`,\n                icon: \"\\uD83D\\uDC8E\",\n                xpAmount: data.xpReward,\n                metadata: data\n            });\n        }\n    }\n    // Получение уведомлений пользователя\n    async getUserNotifications(userId, limit = 20) {\n        try {\n            const notifications = await prisma.notification.findMany({\n                where: {\n                    userId\n                },\n                orderBy: {\n                    createdAt: \"desc\"\n                },\n                take: limit\n            });\n            return notifications;\n        } catch (error) {\n            console.error(\"Error fetching notifications:\", error);\n            return [];\n        }\n    }\n    // Отметить уведомление как прочитанное\n    async markAsRead(notificationId) {\n        try {\n            await prisma.notification.update({\n                where: {\n                    id: notificationId\n                },\n                data: {\n                    isRead: true\n                }\n            });\n        } catch (error) {\n            console.error(\"Error marking notification as read:\", error);\n        }\n    }\n    // Отметить все уведомления как прочитанные\n    async markAllAsRead(userId) {\n        try {\n            await prisma.notification.updateMany({\n                where: {\n                    userId,\n                    isRead: false\n                },\n                data: {\n                    isRead: true\n                }\n            });\n        } catch (error) {\n            console.error(\"Error marking all notifications as read:\", error);\n        }\n    }\n    // Получение количества непрочитанных уведомлений\n    async getUnreadCount(userId) {\n        try {\n            const count = await prisma.notification.count({\n                where: {\n                    userId,\n                    isRead: false\n                }\n            });\n            return count;\n        } catch (error) {\n            console.error(\"Error getting unread count:\", error);\n            return 0;\n        }\n    }\n    // Удаление старых уведомлений (старше 30 дней)\n    async cleanupOldNotifications() {\n        try {\n            const thirtyDaysAgo = new Date();\n            thirtyDaysAgo.setDate(thirtyDaysAgo.getDate() - 30);\n            await prisma.notification.deleteMany({\n                where: {\n                    createdAt: {\n                        lt: thirtyDaysAgo\n                    },\n                    isRead: true\n                }\n            });\n        } catch (error) {\n            console.error(\"Error cleaning up old notifications:\", error);\n        }\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./lib/gamification/notificationService.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/nodemailer"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fnotifications%2Froute&page=%2Fapi%2Fnotifications%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fnotifications%2Froute.ts&appDir=D%3A%5Cmobile%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=D%3A%5Cmobile&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();