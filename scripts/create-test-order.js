const { PrismaClient } = require('@prisma/client')

const prisma = new PrismaClient()

async function createTestOrder() {
  try {
    console.log('üìù –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –∑–∞–∫–∞–∑...')
    
    // –ü–æ–ª—É—á–∞–µ–º –∫–ª–∏–µ–Ω—Ç–∞
    const client = await prisma.user.findUnique({
      where: { email: 'client@example.com' }
    })
    
    if (!client) {
      console.log('‚ùå –ö–ª–∏–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω')
      return
    }
    
    console.log(`‚úÖ –ö–ª–∏–µ–Ω—Ç –Ω–∞–π–¥–µ–Ω: ${client.name} (${client.email})`)
    
    // –ü–æ–ª—É—á–∞–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é "–≠–ª–µ–∫—Ç—Ä–∏–∫"
    const category = await prisma.category.findFirst({
      where: { name: '–≠–ª–µ–∫—Ç—Ä–∏–∫' }
    })
    
    if (!category) {
      console.log('‚ùå –ö–∞—Ç–µ–≥–æ—Ä–∏—è "–≠–ª–µ–∫—Ç—Ä–∏–∫" –Ω–µ –Ω–∞–π–¥–µ–Ω–∞')
      return
    }
    
    console.log(`‚úÖ –ö–∞—Ç–µ–≥–æ—Ä–∏—è –Ω–∞–π–¥–µ–Ω–∞: ${category.name}`)
    
    // –°–æ–∑–¥–∞–µ–º –∑–∞–∫–∞–∑ –Ω–∞ –∑–∞–≤—Ç—Ä–∞
    const tomorrow = new Date()
    tomorrow.setDate(tomorrow.getDate() + 1)
    tomorrow.setHours(14, 0, 0, 0) // 14:00
    
    const order = await prisma.order.create({
      data: {
        clientId: client.id,
        categoryId: category.id,
        serviceDescription: '–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–æ–≤–æ–π —Ä–æ–∑–µ—Ç–∫–∏ –≤ –∫—É—Ö–Ω–µ',
        status: 'pending',
        totalPrice: 75.00,
        priceType: 'fixed',
        orderDate: tomorrow,
        orderTime: new Date('1970-01-01T14:00:00.000Z'),
        address: '—É–ª. –ù–µ–∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏, 25, –∫–≤. 12',
        phone: client.phone,
        clientName: client.name,
        urgency: 'medium',
        estimatedDuration: 2,
        preferredTime: 'afternoon',
        notes: '–ù—É–∂–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ä–æ–∑–µ—Ç–∫—É –¥–ª—è —Å—Ç–∏—Ä–∞–ª—å–Ω–æ–π –º–∞—à–∏–Ω—ã. –°—Ç–µ–Ω–∞ –∫–∏—Ä–ø–∏—á–Ω–∞—è.',
        specialRequirements: '–¢—Ä–µ–±—É–µ—Ç—Å—è —Ä–æ–∑–µ—Ç–∫–∞ —Å –∑–∞–∑–µ–º–ª–µ–Ω–∏–µ–º'
      }
    })
    
    console.log('‚úÖ –ó–∞–∫–∞–∑ —Å–æ–∑–¥–∞–Ω:')
    console.log(`   ID: ${order.id}`)
    console.log(`   –û–ø–∏—Å–∞–Ω–∏–µ: ${order.serviceDescription}`)
    console.log(`   –ö–ª–∏–µ–Ω—Ç: ${order.clientName}`)
    console.log(`   –ö–∞—Ç–µ–≥–æ—Ä–∏—è: ${category.name}`)
    console.log(`   –°—Ç–∞—Ç—É—Å: ${order.status}`)
    console.log(`   –¶–µ–Ω–∞: ${order.totalPrice} BYN`)
    console.log(`   –î–∞—Ç–∞: ${order.orderDate.toLocaleDateString('ru-RU')}`)
    console.log(`   –í—Ä–µ–º—è: ${order.orderTime.toLocaleTimeString('ru-RU')}`)
    console.log(`   –ê–¥—Ä–µ—Å: ${order.address}`)
    console.log(`   –°—Ä–æ—á–Ω–æ—Å—Ç—å: ${order.urgency}`)
    console.log(`   –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: ${order.estimatedDuration} —á–∞—Å–æ–≤`)
    console.log(`   –ü—Ä–∏–º–µ—á–∞–Ω–∏—è: ${order.notes}`)
    console.log(`   –û—Å–æ–±—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è: ${order.specialRequirements}`)
    
    console.log('\nüéØ –¢–µ–ø–µ—Ä—å –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å –º–æ–∂–µ—Ç:')
    console.log('   1. –í–æ–π—Ç–∏ –≤ —Å–∏—Å—Ç–µ–º—É (executor@example.com / executor123)')
    console.log('   2. –ü–µ—Ä–µ–π—Ç–∏ –≤ —Ä–∞–∑–¥–µ–ª "–ó–∞–∫–∞–∑—ã"')
    console.log('   3. –£–≤–∏–¥–µ—Ç—å –Ω–æ–≤—ã–π –∑–∞–∫–∞–∑')
    console.log('   4. –ù–∞–∂–∞—Ç—å "–ü—Ä–∏–Ω—è—Ç—å –∑–∞–∫–∞–∑"')
    console.log('   5. –ù–∞–∂–∞—Ç—å "–ü–æ–¥—Ä–æ–±–Ω–µ–µ" –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –¥–µ—Ç–∞–ª–µ–π')
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error)
  } finally {
    await prisma.$disconnect()
  }
}

createTestOrder()


