const { PrismaClient } = require('@prisma/client')

const prisma = new PrismaClient()

async function createMoreOrders() {
  try {
    console.log('üìù –°–æ–∑–¥–∞–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ç–µ—Å—Ç–æ–≤—ã–µ –∑–∞–∫–∞–∑—ã...')
    
    // –ü–æ–ª—É—á–∞–µ–º –∫–ª–∏–µ–Ω—Ç–∞
    const client = await prisma.user.findUnique({
      where: { email: 'client@example.com' }
    })
    
    if (!client) {
      console.log('‚ùå –ö–ª–∏–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω')
      return
    }
    
    // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    const categories = await prisma.category.findMany({
      where: { isActive: true }
    })
    
    console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–π: ${categories.length}`)
    
    // –°–æ–∑–¥–∞–µ–º –∑–∞–∫–∞–∑—ã –Ω–∞ —Ä–∞–∑–Ω—ã–µ –¥–Ω–∏
    const orders = []
    
    // –ó–∞–∫–∞–∑ 1: –≠–ª–µ–∫—Ç—Ä–∏–∫ (—Å–µ–≥–æ–¥–Ω—è)
    const today = new Date()
    today.setHours(16, 0, 0, 0)
    
    const order1 = await prisma.order.create({
      data: {
        clientId: client.id,
        categoryId: categories.find(c => c.name === '–≠–ª–µ–∫—Ç—Ä–∏–∫')?.id || categories[0].id,
        serviceDescription: '–ó–∞–º–µ–Ω–∞ –≤—ã–∫–ª—é—á–∞—Ç–µ–ª—è –≤ –∫–æ—Ä–∏–¥–æ—Ä–µ',
        status: 'pending',
        totalPrice: 45.00,
        priceType: 'fixed',
        orderDate: today,
        orderTime: '16:00',
        address: '—É–ª. –ö–∞—Ä–ª–∞ –ú–∞—Ä–∫—Å–∞, 12, –∫–≤. 7',
        phone: client.phone,
        clientName: client.name,
        urgency: 'high',
        estimatedDuration: 1,
        preferredTime: 'evening',
        notes: '–í—ã–∫–ª—é—á–∞—Ç–µ–ª—å –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç, –Ω—É–∂–Ω–∞ —Å—Ä–æ—á–Ω–∞—è –∑–∞–º–µ–Ω–∞',
        specialRequirements: '–†–∞–±–æ—Ç–∞—Ç—å –∞–∫–∫—É—Ä–∞—Ç–Ω–æ, –Ω–µ –ø–æ–≤—Ä–µ–¥–∏—Ç—å –æ–±–æ–∏'
      }
    })
    orders.push(order1)
    
    // –ó–∞–∫–∞–∑ 2: –°–∞–Ω—Ç–µ—Ö–Ω–∏–∫ (–∑–∞–≤—Ç—Ä–∞ —É—Ç—Ä–æ–º)
    const tomorrow = new Date()
    tomorrow.setDate(tomorrow.getDate() + 1)
    tomorrow.setHours(9, 0, 0, 0)
    
    const order2 = await prisma.order.create({
      data: {
        clientId: client.id,
        categoryId: categories.find(c => c.name === '–°–∞–Ω—Ç–µ—Ö–Ω–∏–∫')?.id || categories[1].id,
        serviceDescription: '–£—Å—Ç—Ä–∞–Ω–µ–Ω–∏–µ –ø—Ä–æ—Ç–µ—á–∫–∏ –ø–æ–¥ —Ä–∞–∫–æ–≤–∏–Ω–æ–π',
        status: 'pending',
        totalPrice: null,
        priceType: 'negotiable',
        orderDate: tomorrow,
        orderTime: '09:00',
        address: '–ø—Ä. –ù–µ–∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏, 45, –∫–≤. 23',
        phone: client.phone,
        clientName: client.name,
        urgency: 'medium',
        estimatedDuration: 2,
        preferredTime: 'morning',
        notes: '–í–æ–¥–∞ –∫–∞–ø–∞–µ—Ç –∏–∑-–ø–æ–¥ —Ä–∞–∫–æ–≤–∏–Ω—ã, –Ω—É–∂–Ω–æ –Ω–∞–π—Ç–∏ –∏ —É—Å—Ç—Ä–∞–Ω–∏—Ç—å –ø—Ä–∏—á–∏–Ω—É',
        specialRequirements: '–ü—Ä–∏–Ω–µ—Å—Ç–∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ç—Ä—É–±–∞–º–∏'
      }
    })
    orders.push(order2)
    
    // –ó–∞–∫–∞–∑ 3: –†–µ–º–æ–Ω—Ç –∫–≤–∞—Ä—Ç–∏—Ä (–ø–æ—Å–ª–µ–∑–∞–≤—Ç—Ä–∞)
    const dayAfterTomorrow = new Date()
    dayAfterTomorrow.setDate(dayAfterTomorrow.getDate() + 2)
    dayAfterTomorrow.setHours(10, 0, 0, 0)
    
    const order3 = await prisma.order.create({
      data: {
        clientId: client.id,
        categoryId: categories.find(c => c.name === '–†–µ–º–æ–Ω—Ç –∫–≤–∞—Ä—Ç–∏—Ä')?.id || categories[2].id,
        serviceDescription: '–£–∫–ª–∞–¥–∫–∞ –ø–ª–∏—Ç–∫–∏ –≤ –≤–∞–Ω–Ω–æ–π –∫–æ–º–Ω–∞—Ç–µ',
        status: 'pending',
        totalPrice: 300.00,
        priceType: 'fixed',
        orderDate: dayAfterTomorrow,
        orderTime: '10:00',
        address: '—É–ª. –ë–æ–≥–¥–∞–Ω–æ–≤–∏—á–∞, 8, –∫–≤. 15',
        phone: client.phone,
        clientName: client.name,
        urgency: 'low',
        estimatedDuration: 6,
        preferredTime: 'morning',
        notes: '–í–∞–Ω–Ω–∞—è –∫–æ–º–Ω–∞—Ç–∞ 4 –∫–≤.–º, —Å—Ç–µ–Ω—ã –ø–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω—ã',
        specialRequirements: '–ü–ª–∏—Ç–∫–∞ —É–∂–µ –∫—É–ø–ª–µ–Ω–∞, –Ω—É–∂–Ω–∞ —Ç–æ–ª—å–∫–æ —É–∫–ª–∞–¥–∫–∞'
      }
    })
    orders.push(order3)
    
    // –ó–∞–∫–∞–∑ 4: –£–±–æ—Ä–∫–∞ (—á–µ—Ä–µ–∑ 3 –¥–Ω—è)
    const in3Days = new Date()
    in3Days.setDate(in3Days.getDate() + 3)
    in3Days.setHours(14, 0, 0, 0)
    
    const order4 = await prisma.order.create({
      data: {
        clientId: client.id,
        categoryId: categories.find(c => c.name === '–£–±–æ—Ä–∫–∞')?.id || categories[3].id,
        serviceDescription: '–£–±–æ—Ä–∫–∞ –ø–æ—Å–ª–µ —Ä–µ–º–æ–Ω—Ç–∞',
        status: 'pending',
        totalPrice: 150.00,
        priceType: 'fixed',
        orderDate: in3Days,
        orderTime: '14:00',
        address: '—É–ª. –õ–µ–Ω–∏–Ω–∞, 67, –∫–≤. 9',
        phone: client.phone,
        clientName: client.name,
        urgency: 'medium',
        estimatedDuration: 4,
        preferredTime: 'afternoon',
        notes: '–ö–≤–∞—Ä—Ç–∏—Ä–∞ 3-–∫–æ–º–Ω–∞—Ç–Ω–∞—è, –º–Ω–æ–≥–æ —Å—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω–æ–π –ø—ã–ª–∏',
        specialRequirements: '–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–µ —Å—Ä–µ–¥—Å—Ç–≤–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –ø—ã–ª–∏'
      }
    })
    orders.push(order4)
    
    // –ó–∞–∫–∞–∑ 5: –î–æ—Å—Ç–∞–≤–∫–∞ (—á–µ—Ä–µ–∑ 4 –¥–Ω—è)
    const in4Days = new Date()
    in4Days.setDate(in4Days.getDate() + 4)
    in4Days.setHours(11, 0, 0, 0)
    
    const order5 = await prisma.order.create({
      data: {
        clientId: client.id,
        categoryId: categories.find(c => c.name === '–î–æ—Å—Ç–∞–≤–∫–∞')?.id || categories[4].id,
        serviceDescription: '–î–æ—Å—Ç–∞–≤–∫–∞ –º–µ–±–µ–ª–∏ –∏–∑ –º–∞–≥–∞–∑–∏–Ω–∞',
        status: 'pending',
        totalPrice: 80.00,
        priceType: 'fixed',
        orderDate: in4Days,
        orderTime: '11:00',
        address: '–ø—Ä. –ü–æ–±–µ–¥–∏—Ç–µ–ª–µ–π, 25, –∫–≤. 12',
        phone: client.phone,
        clientName: client.name,
        urgency: 'low',
        estimatedDuration: 2,
        preferredTime: 'morning',
        notes: '–ù—É–∂–Ω–æ –∑–∞–±—Ä–∞—Ç—å –¥–∏–≤–∞–Ω –∏–∑ –º–∞–≥–∞–∑–∏–Ω–∞ –∏ –¥–æ—Å—Ç–∞–≤–∏—Ç—å –¥–æ–º–æ–π',
        specialRequirements: '–î–∏–≤–∞–Ω —Ç—è–∂–µ–ª—ã–π, –Ω—É–∂–Ω—ã 2 —á–µ–ª–æ–≤–µ–∫–∞'
      }
    })
    orders.push(order5)
    
    // –ó–∞–∫–∞–∑ 6: –≠–ª–µ–∫—Ç—Ä–∏–∫ (—á–µ—Ä–µ–∑ 5 –¥–Ω–µ–π) - —É–∂–µ –ø—Ä–∏–Ω—è—Ç—ã–π
    const in5Days = new Date()
    in5Days.setDate(in5Days.getDate() + 5)
    in5Days.setHours(13, 0, 0, 0)
    
    // –ü–æ–ª—É—á–∞–µ–º –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è
    const executor = await prisma.user.findUnique({
      where: { email: 'executor@example.com' }
    })
    
    const order6 = await prisma.order.create({
      data: {
        clientId: client.id,
        categoryId: categories.find(c => c.name === '–≠–ª–µ–∫—Ç—Ä–∏–∫')?.id || categories[0].id,
        serviceDescription: '–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö —Ä–æ–∑–µ—Ç–æ–∫ –≤ –≥–æ—Å—Ç–∏–Ω–æ–π',
        status: 'confirmed',
        totalPrice: 120.00,
        priceType: 'fixed',
        orderDate: in5Days,
        orderTime: '13:00',
        address: '—É–ª. –°—É—Ä–≥–∞–Ω–æ–≤–∞, 15, –∫–≤. 4',
        phone: client.phone,
        clientName: client.name,
        urgency: 'medium',
        estimatedDuration: 3,
        preferredTime: 'afternoon',
        notes: '–ù—É–∂–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å 3 —Ä–æ–∑–µ—Ç–∫–∏ –≤ –≥–æ—Å—Ç–∏–Ω–æ–π',
        specialRequirements: '–†–æ–∑–µ—Ç–∫–∏ —Å USB-–ø–æ—Ä—Ç–∞–º–∏',
        executorId: executor?.id
      }
    })
    orders.push(order6)
    
    console.log(`\n‚úÖ –°–æ–∑–¥–∞–Ω–æ ${orders.length} –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤:`)
    
    orders.forEach((order, index) => {
      const category = categories.find(c => c.id === order.categoryId)
      const statusText = order.status === 'confirmed' ? '–ü—Ä–∏–Ω—è—Ç –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–º' : '–û–∂–∏–¥–∞–µ—Ç –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è'
      
      console.log(`\nüìã –ó–∞–∫–∞–∑ ${index + 1} (ID: ${order.id}):`)
      console.log(`   –û–ø–∏—Å–∞–Ω–∏–µ: ${order.serviceDescription}`)
      console.log(`   –ö–∞—Ç–µ–≥–æ—Ä–∏—è: ${category?.name}`)
      console.log(`   –°—Ç–∞—Ç—É—Å: ${statusText}`)
      console.log(`   –¶–µ–Ω–∞: ${order.totalPrice ? `${order.totalPrice} BYN` : '–ü–æ –¥–æ–≥–æ–≤–æ—Ä–µ–Ω–Ω–æ—Å—Ç–∏'}`)
      console.log(`   –î–∞—Ç–∞: ${order.orderDate.toLocaleDateString('ru-RU')}`)
      console.log(`   –í—Ä–µ–º—è: ${order.orderTime}`)
      console.log(`   –ê–¥—Ä–µ—Å: ${order.address}`)
      console.log(`   –°—Ä–æ—á–Ω–æ—Å—Ç—å: ${order.urgency}`)
      console.log(`   –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: ${order.estimatedDuration} —á–∞—Å–æ–≤`)
    })
    
    console.log('\nüéØ –¢–µ–ø–µ—Ä—å —É –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è –µ—Å—Ç—å —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–Ω—ã–µ –∑–∞–∫–∞–∑—ã:')
    console.log('   üìÖ –°–µ–≥–æ–¥–Ω—è - –≠–ª–µ–∫—Ç—Ä–∏–∫ (—Å—Ä–æ—á–Ω—ã–π)')
    console.log('   üìÖ –ó–∞–≤—Ç—Ä–∞ - –°–∞–Ω—Ç–µ—Ö–Ω–∏–∫ (–ø–æ –¥–æ–≥–æ–≤–æ—Ä–µ–Ω–Ω–æ—Å—Ç–∏)')
    console.log('   üìÖ –ü–æ—Å–ª–µ–∑–∞–≤—Ç—Ä–∞ - –†–µ–º–æ–Ω—Ç –∫–≤–∞—Ä—Ç–∏—Ä (–¥–æ–ª–≥–∏–π)')
    console.log('   üìÖ –ß–µ—Ä–µ–∑ 3 –¥–Ω—è - –£–±–æ—Ä–∫–∞ (–ø–æ—Å–ª–µ —Ä–µ–º–æ–Ω—Ç–∞)')
    console.log('   üìÖ –ß–µ—Ä–µ–∑ 4 –¥–Ω—è - –î–æ—Å—Ç–∞–≤–∫–∞ (–º–µ–±–µ–ª—å)')
    console.log('   üìÖ –ß–µ—Ä–µ–∑ 5 –¥–Ω–µ–π - –≠–ª–µ–∫—Ç—Ä–∏–∫ (—É–∂–µ –ø—Ä–∏–Ω—è—Ç)')
    
    console.log('\nüì± –î–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:')
    console.log('   1. –í–æ–π–¥–∏—Ç–µ –∫–∞–∫ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å (executor@example.com / executor123)')
    console.log('   2. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ "–ó–∞–∫–∞–∑—ã"')
    console.log('   3. –£–≤–∏–¥–∏—Ç–µ –∑–∞–∫–∞–∑—ã –Ω–∞ —Ä–∞–∑–Ω—ã–µ –¥–Ω–∏')
    console.log('   4. –¢–µ—Å—Ç–∏—Ä—É–π—Ç–µ –≤—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏: –ø—Ä–∏–Ω—è—Ç–∏–µ, –æ—Ç–º–µ–Ω–∞, –Ω–∞—á–∞–ª–æ —Ä–∞–±–æ—Ç—ã, –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ')
    console.log('   5. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –ø–æ –≤—Ä–µ–º–µ–Ω–∏ (24 —á–∞—Å–∞)')
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error)
  } finally {
    await prisma.$disconnect()
  }
}

createMoreOrders()
