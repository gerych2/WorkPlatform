const { PrismaClient } = require('@prisma/client')
const bcrypt = require('bcryptjs')

const prisma = new PrismaClient()

async function createAdmin() {
  try {
    console.log('–°–æ–∑–¥–∞–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞...')

    // –•–µ—à–∏—Ä—É–µ–º –ø–∞—Ä–æ–ª—å
    const hashedPassword = await bcrypt.hash('admin123', 10)

    // –°–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è-–∞–¥–º–∏–Ω–∞
    const admin = await prisma.user.create({
      data: {
        name: '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä',
        email: 'admin@serviceplatform.by',
        phone: '+375 (29) 000-00-00',
        passwordHash: hashedPassword,
        role: 'admin',
        status: 'active',
        location: '–ú–∏–Ω—Å–∫',
        isVerified: true,
        verificationStatus: 'verified',
        clientRating: 0,
        clientReviewsCount: 0
      }
    })

    console.log('‚úÖ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω!')
    console.log('üìß Email: admin@serviceplatform.by')
    console.log('üîë –ü–∞—Ä–æ–ª—å: admin123')
    console.log('üë§ ID:', admin.id)

  } catch (error) {
    if (error.code === 'P2002') {
      console.log('‚ö†Ô∏è  –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —Å —Ç–∞–∫–∏–º email —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç')
    } else {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:', error)
    }
  } finally {
    await prisma.$disconnect()
  }
}

createAdmin()




